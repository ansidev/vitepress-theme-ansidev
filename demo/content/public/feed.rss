<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>ansidev's blog</title>
        <link>https://ansidev.xyz</link>
        <description>Blog of ansidev</description>
        <lastBuildDate>Mon, 19 Feb 2024 00:57:49 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>ansidev's blog</title>
            <url>https://ansidev.xyz/pwa-512x512.png</url>
            <link>https://ansidev.xyz</link>
        </image>
        <copyright>Copyright (c) 2019-present, Le Minh Tri (@ansidev)</copyright>
        <item>
            <title><![CDATA[How to install OpenJDK on macOS?]]></title>
            <link>https://ansidev.xyz/posts/2023-07-11-how-to-install-openjdk-on-macos</link>
            <guid>https://ansidev.xyz/posts/2023-07-11-how-to-install-openjdk-on-macos</guid>
            <pubDate>Tue, 11 Jul 2023 12:43:28 GMT</pubDate>
            <content:encoded><![CDATA[<p>Steps:</p><ol><li><p>Install OpenJDK using <a href="https://brew.sh" class="external-link" target="_blank" rel="noreferrer noopener">brew</a></p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">brew </span><span style="color:#9db1c5">install</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">openjdk</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">brew</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">install</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">openjdk</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Configure environment variable <code class="">JAVA_HOME</code>.</p><p>Configure manually:</p><ul><li><p>Add the below line to <code class="">~/.zshrc</code>:</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">export JAVA_HOME="/usr/local/opt/openjdk/libexec/openjdk.jdk/Contents/Home"</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">export JAVA_HOME="/usr/local/opt/openjdk/libexec/openjdk.jdk/Contents/Home"</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li><li><p>Restart your terminal.</p></li></ul><p>Or you can run the below command:</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">echo -e "\nexport JAVA_HOME=\"$(brew --prefix openjdk)/libexec/openjdk.jdk/Contents/Home\"" &gt;&gt; ${ZDOTDIR:-~}/.zshrc &amp;&amp; exec zsh</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">echo -e "\nexport JAVA_HOME=\"$(brew --prefix openjdk)/libexec/openjdk.jdk/Contents/Home\"" &gt;&gt; ${ZDOTDIR:-~}/.zshrc &amp;&amp; exec zsh</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GitHub Actions notes]]></title>
            <link>https://ansidev.xyz/posts/2023-06-17-github-actions-notes</link>
            <guid>https://ansidev.xyz/posts/2023-06-17-github-actions-notes</guid>
            <pubDate>Sat, 17 Jun 2023 08:58:40 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="story" tabindex="-1">Story</h2><p>I have started learing GitHub Action for over 1 year.</p><p>As a beginner, I was writing GitHub workflows for my own projects to automate repetitive tasks.</p><p>However, I have to copy workflows among the projects and I found it hard to maintain them when the duplication was increased day by day.</p><p>There are two solutions provided by GitHub to resolve this issue:</p><ul><li><a href="https://docs.github.com/en/actions/using-workflows/reusing-workflows" class="external-link" target="_blank" rel="noreferrer noopener">Reusable workflows</a>.</li><li><a href="https://docs.github.com/en/actions/creating-actions/about-custom-actions" class="external-link" target="_blank" rel="noreferrer noopener">Custom GitHub actions</a>, as you usually find them on the <a href="https://github.com/marketplace?type=actions" class="external-link" target="_blank" rel="noreferrer noopener">GitHub Actions Marketplace</a>.</li></ul><p>Both of them was created to avoid duplicate code and to reduce the maintenance cost. However, they are not the same.</p><p>Reusable workflow is used to reuse the whole workflow.</p><p>On the other hand, custom action is used to reuse the jobs.</p><p>You can apply both solutions to reduce the code duplication and to reduce the maintenance cost in your projects.</p><h2 id="github-custom-actions" tabindex="-1">GitHub custom actions</h2><h3 id="basic-notes" tabindex="-1">Basic notes</h3><ul><li>The minimal requirement is to have a GitHub custom action is a metadata file called <code class="">action.yml</code> or <code class="">action.yaml</code>.</li><li>There are three type of actions: Docker container, Javascript, and Composite action.</li><li>Docker container action does not support macOS and Windows.</li><li>Javascript and Composite action supports Linux, macOS and Windows.</li><li>You can reference a custom GitHub action using this syntax: <code class="">{owner}</code>/<code class="">{action-repo}</code>@<code class="">{git-ref}</code>. <code class="">{git-ref}</code> can be a branch, tag, or commit SHA.</li><li>You don’t need to publish your custom GitHub action to the GitHub Marketplace, just need to ensure it is accessible by other repositories.</li><li>You can create a monorepo for multiple custom GitHub actions. The limitation is you cannot publish them to the GitHub Marketplace.</li></ul><h3 id="best-practices" tabindex="-1">Best practices</h3><p>IMO, some best practices for custom action are:</p><ul><li>Create GitHub workflows for testing your custom GitHub Action to ensure it is working properly, both internal workflows and external workflows.</li><li>Create documentation for your custom GitHub action. For references, I used <a href="https://github.com/npalm/action-docs" class="external-link" target="_blank" rel="noreferrer noopener">npalm/action-docs</a>. It does not meet all of my expectations, however, it is still a good tool. You should try.</li><li>If you want to publish your GitHub custom GitHub action to the GitHub Marketplace, you need to meet some requirements. For more details, please refer to this <a href="https://github.com/%7Bowner%7D/%7Baction-repo%7D/releases/new?marketplace=true" class="external-link" target="_blank" rel="noreferrer noopener">link</a> and check whether all requirements are met.</li><li>Write a good changelog. You can generate the changelog from your git commits if you wrote a good commit messages.</li><li>Don’t forget to automate your tasks: testing your action, publishing new release.</li><li>At this moment, I don’t find any documentation about publishing the custom GitHub action on release automatically. Finally, I have to do this task from the web UI manually.</li></ul><h2 id="conclusion" tabindex="-1">Conclusion</h2><p>Checkout my custom GitHub Actions:</p><ul><li><a href="https://github.com/ghacts/manual-deploy-to-netlify" class="external-link" target="_blank" rel="noreferrer noopener">ghacts/manual-deploy-to-netlify</a> - GitHub Actions for manual deploying static site projects to Netlify</li><li><a href="https://github.com/ghacts/go" class="external-link" target="_blank" rel="noreferrer noopener">ghacts/go</a> - GitHub Actions for building and testing Go projects</li><li><a href="https://github.com/ghacts/static-site" class="external-link" target="_blank" rel="noreferrer noopener">ghacts/static-site</a> - GitHub Actions for building and testing static site projects</li><li><a href="https://github.com/ghacts/gitflow" class="external-link" target="_blank" rel="noreferrer noopener">ghacts/gitflow</a> - GitHub Actions for automating gitflow</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to gpgsign git commit using lazygit?]]></title>
            <link>https://ansidev.xyz/posts/2023-06-16-how-to-gpgsign-git-commit-using-lazygit</link>
            <guid>https://ansidev.xyz/posts/2023-06-16-how-to-gpgsign-git-commit-using-lazygit</guid>
            <pubDate>Fri, 16 Jun 2023 11:30:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="issue" tabindex="-1">Issue</h2><p>One of best practices in my opinion when using git is enabling GPG signing for your commit.</p><p>And one of my favorite tools to commit my code in terminal environment is Lazygit. However, by default, it doesn’t work if GPG signing is enabled.</p><ul><li><a href="https://github.com/jesseduffield/lazygit/issues/30" class="external-link" target="_blank" rel="noreferrer noopener">https://github.com/jesseduffield/lazygit/issues/30</a></li><li><a href="https://github.com/jesseduffield/lazygit/issues/1146" class="external-link" target="_blank" rel="noreferrer noopener">https://github.com/jesseduffield/lazygit/issues/1146</a></li></ul><h2 id="solution" tabindex="-1">Solution</h2><p>After trying multiple solutions, I found a simple solution to resolve this issue.</p><p>You can add this config to your ssh config file (default path is ~/.ssh/config):</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ForwardAgent yes</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">ForwardAgent yes</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><p><strong>Note</strong>: You have to add config to the SSH key which will be used for signing the git commits.</p><p>After that, the config should look like below:</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">Host github</span></span>
<span class="line"><span style="color:#b392f0">  HostName github.com</span></span>
<span class="line"><span style="color:#b392f0">  IdentityFile ~/.ssh/id_rsa</span></span>
<span class="line"><span style="color:#b392f0">  ForwardAgent yes</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">Host github</span></span>
<span class="line"><span style="color:#24292eff">  HostName github.com</span></span>
<span class="line"><span style="color:#24292eff">  IdentityFile ~/.ssh/id_rsa</span></span>
<span class="line"><span style="color:#24292eff">  ForwardAgent yes</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><p>Hope this helps you out!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[WezTerm cheatsheet]]></title>
            <link>https://ansidev.xyz/posts/2023-05-18-wezterm-cheatsheet</link>
            <guid>https://ansidev.xyz/posts/2023-05-18-wezterm-cheatsheet</guid>
            <pubDate>Thu, 18 May 2023 08:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="why-wezterm%3F" tabindex="-1">Why WezTerm?</h2><p>I have used Alacritty for a long time. And it has several issues:</p><ul><li>It does not support tab.</li><li>It does not support splitting pane. This issue can be resolved by using tmux, however, I struggled with conflict key bindings since I use Neovim inside tmux.</li></ul><p>Recently, I switched to WezTerm</p><ul><li>It supports both tab and splitting panes.</li><li>WezTerm is using Lua for configuration, which is also used for Neovim configurations. It’s more flexible than Alacritty.</li><li>Since tmux is unnecessary, the key bindings issue can be resolved using Lua configurations.</li></ul><h2 id="configurations" tabindex="-1">Configurations</h2><p>These configurations are tested on macOS.</p><p>Base configurations:</p><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> wezterm </span><span style="color:#f97583">=</span><span style="color:#b392f0"> require </span><span style="color:#ffab70">'wezterm'</span></span>
<span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> config </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f97583">if</span><span style="color:#b392f0"> wezterm.config_builder </span><span style="color:#f97583">then</span></span>
<span class="line"><span style="color:#b392f0">  config </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.config_builder()</span></span>
<span class="line"><span style="color:#f97583">end</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> wezterm </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">require</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'wezterm'</span></span>
<span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> config </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">if</span><span style="color:#24292EFF"> wezterm.config_builder </span><span style="color:#d32f2f">then</span></span>
<span class="line"><span style="color:#24292EFF">  config </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.</span><span style="color:#6f42c1">config_builder</span><span style="color:#24292EFF">()</span></span>
<span class="line"><span style="color:#d32f2f">end</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="disable-fancy-tab-style" tabindex="-1">Disable fancy tab style</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">config.use_fancy_tab_bar </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">false</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">config.use_fancy_tab_bar </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">false</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="hide-the-tab-bar-if-there-is-only-one-tab" tabindex="-1">Hide the tab bar if there is only one tab</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">config.hide_tab_bar_if_only_one_tab </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">true</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">config.hide_tab_bar_if_only_one_tab </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">true</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="set-window-opacity" tabindex="-1">Set window opacity</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">config.window_background_opacity </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#f8f8f8">0.8</span><span style="color:#b392f0"> </span><span style="color:#6b737c">-- personal recommended value</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">config.window_background_opacity </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">0.8</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5">-- personal recommended value</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="maximized-window-on-start-up" tabindex="-1">Maximized window on start up</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#6b737c">-- https://wezfurlong.org/wezterm/config/lua/gui-events/gui-startup.html</span></span>
<span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> mux </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.mux</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">wezterm.on(</span><span style="color:#ffab70">'gui-startup'</span><span style="color:#b392f0">, </span><span style="color:#f97583">function</span><span style="color:#b392f0">(</span><span style="color:#ff9800">cmd</span><span style="color:#b392f0">)</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f97583">local</span><span style="color:#b392f0"> tab, pane, window </span><span style="color:#f97583">=</span><span style="color:#b392f0"> mux.spawn_window(cmd </span><span style="color:#f97583">or</span><span style="color:#b392f0"> {})</span></span>
<span class="line"><span style="color:#b392f0">  window:gui_window():maximize()</span></span>
<span class="line"><span style="color:#f97583">end</span><span style="color:#b392f0">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f97583">return</span><span style="color:#b392f0"> config</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#c2c3c5">-- https://wezfurlong.org/wezterm/config/lua/gui-events/gui-startup.html</span></span>
<span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> mux </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.mux</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">wezterm.</span><span style="color:#6f42c1">on</span><span style="color:#24292EFF">(</span><span style="color:#22863a">'gui-startup'</span><span style="color:#24292EFF">, </span><span style="color:#d32f2f">function</span><span style="color:#24292EFF">(</span><span style="color:#ff9800">cmd</span><span style="color:#24292EFF">)</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> tab, pane, window </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> mux.</span><span style="color:#6f42c1">spawn_window</span><span style="color:#24292EFF">(cmd </span><span style="color:#d32f2f">or</span><span style="color:#24292EFF"> {})</span></span>
<span class="line"><span style="color:#24292EFF">  window:</span><span style="color:#6f42c1">gui_window</span><span style="color:#24292EFF">():</span><span style="color:#6f42c1">maximize</span><span style="color:#24292EFF">()</span></span>
<span class="line"><span style="color:#d32f2f">end</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">return</span><span style="color:#24292EFF"> config</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="display-tab-navigator" tabindex="-1">Display Tab Navigator</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> act </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">config.keys </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">  {</span></span>
<span class="line"><span style="color:#b392f0">    key </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'t'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    mods </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'CMD|SHIFT'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    action </span><span style="color:#f97583">=</span><span style="color:#b392f0"> act.ShowTabNavigator,</span></span>
<span class="line"><span style="color:#b392f0">  },</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c">-- other keys</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> act </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">config.keys </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">  {</span></span>
<span class="line"><span style="color:#24292EFF">    key </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'t'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    mods </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'CMD|SHIFT'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    action </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> act.ShowTabNavigator,</span></span>
<span class="line"><span style="color:#24292EFF">  },</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5">-- other keys</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="rename-tab-title" tabindex="-1">Rename tab title</h3><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> act </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">config.keys </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">  {</span></span>
<span class="line"><span style="color:#b392f0">    key </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'R'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    mods </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'CMD|SHIFT'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    action </span><span style="color:#f97583">=</span><span style="color:#b392f0"> act.PromptInputLine {</span></span>
<span class="line"><span style="color:#b392f0">      description </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'Enter new name for tab'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">      action </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.action_callback(</span><span style="color:#f97583">function</span><span style="color:#b392f0">(</span><span style="color:#ff9800">window</span><span style="color:#bbb">,</span><span style="color:#b392f0"> </span><span style="color:#ff9800">_</span><span style="color:#bbb">,</span><span style="color:#b392f0"> </span><span style="color:#ff9800">line</span><span style="color:#b392f0">)</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#6b737c">-- line will be `nil` if they hit escape without entering anything</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#6b737c">-- An empty string if they just hit enter</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#6b737c">-- Or the actual line of text they wrote</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f97583">if</span><span style="color:#b392f0"> line </span><span style="color:#f97583">then</span></span>
<span class="line"><span style="color:#b392f0">          window:active_tab():set_title(line)</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f97583">end</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f97583">end</span><span style="color:#b392f0">),</span></span>
<span class="line"><span style="color:#b392f0">    },</span></span>
<span class="line"><span style="color:#b392f0">  },</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c">-- other keys</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> act </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">config.keys </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">  {</span></span>
<span class="line"><span style="color:#24292EFF">    key </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'R'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    mods </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'CMD|SHIFT'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    action </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> act.</span><span style="color:#6f42c1">PromptInputLine</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">      description </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'Enter new name for tab'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">      action </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.</span><span style="color:#6f42c1">action_callback</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">function</span><span style="color:#24292EFF">(</span><span style="color:#ff9800">window</span><span style="color:#212121">,</span><span style="color:#24292EFF"> </span><span style="color:#ff9800">_</span><span style="color:#212121">,</span><span style="color:#24292EFF"> </span><span style="color:#ff9800">line</span><span style="color:#24292EFF">)</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#c2c3c5">-- line will be `nil` if they hit escape without entering anything</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#c2c3c5">-- An empty string if they just hit enter</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#c2c3c5">-- Or the actual line of text they wrote</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">if</span><span style="color:#24292EFF"> line </span><span style="color:#d32f2f">then</span></span>
<span class="line"><span style="color:#24292EFF">          window:</span><span style="color:#6f42c1">active_tab</span><span style="color:#24292EFF">():</span><span style="color:#6f42c1">set_title</span><span style="color:#24292EFF">(line)</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">end</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">end</span><span style="color:#24292EFF">),</span></span>
<span class="line"><span style="color:#24292EFF">    },</span></span>
<span class="line"><span style="color:#24292EFF">  },</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5">-- other keys</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="open-wezterm-config-file-quickly" tabindex="-1">Open WezTerm config file quickly</h3><p>This key binding will open WezTerm configuration file using Neovim. Replace Neovim by your favorite text editor.</p><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">local</span><span style="color:#b392f0"> act </span><span style="color:#f97583">=</span><span style="color:#b392f0"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">config.keys </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">  {</span></span>
<span class="line"><span style="color:#b392f0">    key </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">','</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    mods </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'CMD'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    action </span><span style="color:#f97583">=</span><span style="color:#b392f0"> act.SpawnCommandInNewTab {</span></span>
<span class="line"><span style="color:#b392f0">      cwd </span><span style="color:#f97583">=</span><span style="color:#b392f0"> os.getenv(</span><span style="color:#ffab70">'WEZTERM_CONFIG_DIR'</span><span style="color:#b392f0">),</span></span>
<span class="line"><span style="color:#b392f0">      set_environment_variables </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">        TERM </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'screen-256color'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">      },</span></span>
<span class="line"><span style="color:#b392f0">      args </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#ffab70">'/usr/local/bin/nvim'</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">        os.getenv(</span><span style="color:#ffab70">'WEZTERM_CONFIG_FILE'</span><span style="color:#b392f0">),</span></span>
<span class="line"><span style="color:#b392f0">      },</span></span>
<span class="line"><span style="color:#b392f0">    },</span></span>
<span class="line"><span style="color:#b392f0">  },</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c">-- other keys</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">local</span><span style="color:#24292EFF"> act </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> wezterm.action</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">config.keys </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">  {</span></span>
<span class="line"><span style="color:#24292EFF">    key </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">','</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    mods </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'CMD'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    action </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> act.</span><span style="color:#6f42c1">SpawnCommandInNewTab</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">      cwd </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">os.getenv</span><span style="color:#24292EFF">(</span><span style="color:#22863a">'WEZTERM_CONFIG_DIR'</span><span style="color:#24292EFF">),</span></span>
<span class="line"><span style="color:#24292EFF">      set_environment_variables </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">        TERM </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'screen-256color'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">      },</span></span>
<span class="line"><span style="color:#24292EFF">      args </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#22863a">'/usr/local/bin/nvim'</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#6f42c1">os.getenv</span><span style="color:#24292EFF">(</span><span style="color:#22863a">'WEZTERM_CONFIG_FILE'</span><span style="color:#24292EFF">),</span></span>
<span class="line"><span style="color:#24292EFF">      },</span></span>
<span class="line"><span style="color:#24292EFF">    },</span></span>
<span class="line"><span style="color:#24292EFF">  },</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5">-- other keys</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Solutions for VirtualBox issues]]></title>
            <link>https://ansidev.xyz/posts/2023-05-13-solutions-for-virtualbox-issues</link>
            <guid>https://ansidev.xyz/posts/2023-05-13-solutions-for-virtualbox-issues</guid>
            <pubDate>Sat, 13 May 2023 02:30:05 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="issues" tabindex="-1">Issues</h2><h3 id="black-screen-after-installing-guest-additions" tabindex="-1">Black screen after installing Guest Additions</h3><p>Try to disable <strong>3D Acceleration</strong> in the VM Settings.</p><h3 id="virtualbox-shared-folder-permission" tabindex="-1">VirtualBox shared folder permission</h3><p>You can not read the content of the shared folder inside Ubuntu VM.</p><p><strong>Solution</strong>: Run</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">adduser</span><span style="color:#b392f0"> $USER </span><span style="color:#9db1c5">vboxsf</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">adduser</span><span style="color:#24292EFF"> $USER </span><span style="color:#2b5581">vboxsf</span></span>
<span class="line"></span></code></pre></div></code></pre><p>from VM terminal, then reboot or logout and login.</p><h3 id="increase-the-video-memory-to-256mb-(maximum-value)" tabindex="-1">Increase the video memory to 256MB (maximum value)</h3><p><strong>Solution</strong>: Run</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">VBoxManage </span><span style="color:#9db1c5">modifyvm</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"{virtual-machine-name}"</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--vram</span><span style="color:#b392f0"> </span><span style="color:#f8f8f8">256</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">VBoxManage</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">modifyvm</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"{virtual-machine-name}"</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--vram</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">256</span></span>
<span class="line"></span></code></pre></div></code></pre><p>from host terminal.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to change the highlight style using vim-illuminate?]]></title>
            <link>https://ansidev.xyz/posts/2023-04-25-how-to-change-the-highlight-style-using-vim-illuminate</link>
            <guid>https://ansidev.xyz/posts/2023-04-25-how-to-change-the-highlight-style-using-vim-illuminate</guid>
            <pubDate>Mon, 24 Apr 2023 22:58:22 GMT</pubDate>
            <description><![CDATA[
## Problem

[vim-illuminate](https://github.com/RRethy/vim-illuminate) is a (Neo)Vim plugin for automatically highlighting other uses of the word under the cursor using either LSP, Tree-sitter, or regex matching.

However, I don't like the default highlight style of the current version.

In this tutorial, I will guide you how to change it.

## Solution

The minimal config should look like below:

```lua
require("illuminate").configure{}

-- change the highlight style
vim.api.nvim_set_hl(0, "IlluminatedWordText", { link = "Visual" })
vim.api.nvim_set_hl(0, "IlluminatedWordRead", { link = "Visual" })
vim.api.nvim_set_hl(0, "IlluminatedWordWrite", { link = "Visual" })

]]></description>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p><a href="https://github.com/RRethy/vim-illuminate" class="external-link" target="_blank" rel="noreferrer noopener">vim-illuminate</a> is a (Neo)Vim plugin for automatically highlighting other uses of the word under the cursor using either LSP, Tree-sitter, or regex matching.</p><p>However, I don’t like the default highlight style of the current version.</p><p>In this tutorial, I will guide you how to change it.</p><h2 id="solution" tabindex="-1">Solution</h2><p>The minimal config should look like below:</p><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">require(</span><span style="color:#ffab70">"illuminate"</span><span style="color:#b392f0">).configure{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c">-- change the highlight style</span></span>
<span class="line"><span style="color:#b392f0">vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordText"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"><span style="color:#b392f0">vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordRead"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"><span style="color:#b392f0">vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordWrite"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c">--- auto update the highlight style on colorscheme change</span></span>
<span class="line"><span style="color:#b392f0">vim.api.nvim_create_autocmd({ </span><span style="color:#ffab70">"ColorScheme" </span><span style="color:#b392f0">}, {</span></span>
<span class="line"><span style="color:#b392f0">  pattern </span><span style="color:#f97583">=</span><span style="color:#b392f0"> { </span><span style="color:#ffab70">"*" </span><span style="color:#b392f0">},</span></span>
<span class="line"><span style="color:#b392f0">  callback </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#f97583">function</span><span style="color:#b392f0">(</span><span style="color:#ff9800">ev</span><span style="color:#b392f0">)</span></span>
<span class="line"><span style="color:#b392f0">    vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordText"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"><span style="color:#b392f0">    vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordRead"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"><span style="color:#b392f0">    vim.api.nvim_set_hl(</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">, </span><span style="color:#ffab70">"IlluminatedWordWrite"</span><span style="color:#b392f0">, { link </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Visual" </span><span style="color:#b392f0">})</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f97583">end</span></span>
<span class="line"><span style="color:#b392f0">})</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">require</span><span style="color:#24292EFF">(</span><span style="color:#22863a">"illuminate"</span><span style="color:#24292EFF">).</span><span style="color:#6f42c1">configure</span><span style="color:#24292EFF">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5">-- change the highlight style</span></span>
<span class="line"><span style="color:#24292EFF">vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordText"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"><span style="color:#24292EFF">vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordRead"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"><span style="color:#24292EFF">vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordWrite"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5">--- auto update the highlight style on colorscheme change</span></span>
<span class="line"><span style="color:#24292EFF">vim.api.</span><span style="color:#6f42c1">nvim_create_autocmd</span><span style="color:#24292EFF">({ </span><span style="color:#22863a">"ColorScheme" </span><span style="color:#24292EFF">}, {</span></span>
<span class="line"><span style="color:#24292EFF">  pattern </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> { </span><span style="color:#22863a">"*" </span><span style="color:#24292EFF">},</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#6f42c1">callback</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">function</span><span style="color:#24292EFF">(</span><span style="color:#ff9800">ev</span><span style="color:#24292EFF">)</span></span>
<span class="line"><span style="color:#24292EFF">    vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordText"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"><span style="color:#24292EFF">    vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordRead"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"><span style="color:#24292EFF">    vim.api.</span><span style="color:#6f42c1">nvim_set_hl</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">, </span><span style="color:#22863a">"IlluminatedWordWrite"</span><span style="color:#24292EFF">, { link </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Visual" </span><span style="color:#24292EFF">})</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">end</span></span>
<span class="line"><span style="color:#24292EFF">})</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You can customize the above snippet code to fit your need.</p><p>Hope this help!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Tip for rcmd macOS]]></title>
            <link>https://ansidev.xyz/posts/2023-04-18-tip-for-rcmd-macos</link>
            <guid>https://ansidev.xyz/posts/2023-04-18-tip-for-rcmd-macos</guid>
            <pubDate>Tue, 18 Apr 2023 04:48:40 GMT</pubDate>
            <content:encoded><![CDATA[<p>Tip for rcmd macOS.</p><h2 id="problem" tabindex="-1">Problem</h2><p><a href="https://lowtechguys.com/rcmd/" class="external-link" target="_blank" rel="noreferrer noopener">rcmd</a> is a macOS application that help switching among applications instantly.</p><p>However, this is a shareware. The trial version has a limitation, it stops working after a few hours, you have to restart the app to resets the trial.</p><p>In this article, I will guide you how to restart rcmd automatically.</p><h2 id="solution" tabindex="-1">Solution</h2><p>We will create a macOS background service that run at start up. The service will restart rcmd each 30 minutes.</p><p>Steps:</p><ol><li><p>Launch rcmd app. You should see its icon in the system tray menu.</p></li><li><p>Launch your favorite terminal app.</p></li><li><p>Run</p></li></ol><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">cat </span><span style="color:#f97583">&lt;&lt;</span><span style="color:#b392f0"> </span><span style="color:#b392f0">EOF</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#f97583">~</span><span style="color:#b392f0">/Library/LaunchAgents/xyz.ansidev.rcmd.autorestart.plist</span></span>
<span class="line"><span style="color:#9db1c5">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span>
<span class="line"><span style="color:#9db1c5">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span>
<span class="line"><span style="color:#9db1c5">&lt;plist version="1.0"&gt;</span></span>
<span class="line"><span style="color:#9db1c5">  &lt;dict&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;key&gt;RunAtLoad&lt;/key&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;true /&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;key&gt;Label&lt;/key&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;string&gt;xyz.ansidev.rcmd.autorestart&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;key&gt;ProgramArguments&lt;/key&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;array&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;/usr/bin/osascript&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;quit app "rcmd"&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;delay 5&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">      &lt;string&gt;launch app "rcmd"&lt;/string&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;/array&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;key&gt;StartInterval&lt;/key&gt;</span></span>
<span class="line"><span style="color:#9db1c5">    &lt;integer&gt;1800&lt;/integer&gt;</span></span>
<span class="line"><span style="color:#9db1c5">  &lt;/dict&gt;</span></span>
<span class="line"><span style="color:#9db1c5">&lt;/plist&gt;</span></span>
<span class="line"><span style="color:#b392f0">EOF</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">cat</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&lt;&lt;</span><span style="color:#24292EFF"> </span><span style="color:#24292EFF">EOF</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">~</span><span style="color:#24292EFF">/Library/LaunchAgents/xyz.ansidev.rcmd.autorestart.plist</span></span>
<span class="line"><span style="color:#2b5581">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span>
<span class="line"><span style="color:#2b5581">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span>
<span class="line"><span style="color:#2b5581">&lt;plist version="1.0"&gt;</span></span>
<span class="line"><span style="color:#2b5581">  &lt;dict&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;key&gt;RunAtLoad&lt;/key&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;true /&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;key&gt;Label&lt;/key&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;string&gt;xyz.ansidev.rcmd.autorestart&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;key&gt;ProgramArguments&lt;/key&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;array&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;/usr/bin/osascript&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;quit app "rcmd"&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;delay 5&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;-e&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">      &lt;string&gt;launch app "rcmd"&lt;/string&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;/array&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;key&gt;StartInterval&lt;/key&gt;</span></span>
<span class="line"><span style="color:#2b5581">    &lt;integer&gt;1800&lt;/integer&gt;</span></span>
<span class="line"><span style="color:#2b5581">  &lt;/dict&gt;</span></span>
<span class="line"><span style="color:#2b5581">&lt;/plist&gt;</span></span>
<span class="line"><span style="color:#24292EFF">EOF</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="4"><li>Load service</li></ol><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">launchctl </span><span style="color:#9db1c5">load</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">~/Library/LaunchAgents/xyz.ansidev.rcmd.autorestart.plist</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">launchctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">load</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">~/Library/LaunchAgents/xyz.ansidev.rcmd.autorestart.plist</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You should see the rcmd icon in the system tray menu was disappeared, then displayed again (because it was restarted successfully)</p><ol start="5"><li>Check whether the service was started successfully</li></ol><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">launchctl </span><span style="color:#9db1c5">list</span><span style="color:#b392f0"> </span><span style="color:#f97583">|</span><span style="color:#b392f0"> grep </span><span style="color:#9db1c5">xyz.ansidev.rcmd.autorestart</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">launchctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">list</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">|</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">grep</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">xyz.ansidev.rcmd.autorestart</span></span>
<span class="line"></span></code></pre></div></code></pre><p>The second column (exit code) should display 0 as the output value.</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">-	</span><span style="color:#f8f8f8">0</span><span style="color:#b392f0">	</span><span style="color:#9db1c5">xyz.ansidev.rcmd.autorestart</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">-</span><span style="color:#24292EFF">	</span><span style="color:#1976d2">0</span><span style="color:#24292EFF">	</span><span style="color:#2b5581">xyz.ansidev.rcmd.autorestart</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to solve Alt key binding issue on macOS?]]></title>
            <link>https://ansidev.xyz/posts/2023-04-16-how-to-solve-alt-key-binding-issue-on-macos</link>
            <guid>https://ansidev.xyz/posts/2023-04-16-how-to-solve-alt-key-binding-issue-on-macos</guid>
            <pubDate>Sun, 16 Apr 2023 02:40:48 GMT</pubDate>
            <content:encoded><![CDATA[<p>Solution for binding Alt + {key} hotkeys.</p><h2 id="problem" tabindex="-1">Problem</h2><p>If you are using macOS, you can experience this issue each time you press any hotkey which contains <code class="">Options</code>.</p><p>For example, <code class="">Options</code> + <code class="">a</code> will print <code class="">å</code> in your text editor.</p><h2 id="root-cause" tabindex="-1">Root cause</h2><p>Those output characters is pre-defined by the keyboard input method.</p><p>Almost users use the <code class="">U.S</code> keyboard layout which cause this issue.</p><h2 id="solution" tabindex="-1">Solution</h2><ol><li>All apps:</li></ol><p>Change the keyboard input method. You can try this keyboard input method: <code class="">Unicode Hex Input</code>.</p><ol start="2"><li>Alacritty 0.12+:</li></ol><p>Add this option to your Alacritty config:</p><pre><code class="language-yaml"><div class="shiki-container language-yaml"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f8f8f8">window</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">option_as_alt</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">OnlyLeft</span><span style="color:#b392f0"> </span><span style="color:#6b737c"># other values are None, OnlyRight, Both</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">window</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">option_as_alt</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">OnlyLeft</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5"># other values are None, OnlyRight, Both</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to set GitHub job environment dynamically?]]></title>
            <link>https://ansidev.xyz/posts/2023-02-28-how-to-set-github-job-environment-dynamically</link>
            <guid>https://ansidev.xyz/posts/2023-02-28-how-to-set-github-job-environment-dynamically</guid>
            <pubDate>Tue, 28 Feb 2023 10:13:57 GMT</pubDate>
            <content:encoded><![CDATA[<p>This is how I set the GitHub Actions job environment dynamically.</p><h2 id="solutions" tabindex="-1">Solutions</h2><pre><code class="language-yaml"><div class="shiki-container language-yaml"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79b8ff">on</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">pull_request</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">branches</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#ffab70">main</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#ffab70">develop</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">types</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#ffab70">opened</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#ffab70">synchronize</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#ffab70">closed</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f8f8f8">jobs</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">set_job_environment</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">if</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">github.event.action != 'closed' ||</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#ffab70">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">runs-on</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">ubuntu-latest</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">steps</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">Set job environment as pr-${{ github.event.number }}</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">if</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">github.base_ref == 'develop' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">contains(fromJSON('["opened", "synchronize"]'), github.event.action)</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">env</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#f8f8f8">JOB_ENVIRONMENT</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">pr-${{ github.event.number }}</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">run</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#f97583">|</span></span>
<span class="line"><span style="color:#9db1c5">          echo "JOB_ENVIRONMENT=$JOB_ENVIRONMENT" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">Set job environment as preview</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">if</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">github.base_ref == 'develop' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">github.event.action == 'closed' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">run</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#f97583">|</span></span>
<span class="line"><span style="color:#9db1c5">          echo "JOB_ENVIRONMENT=preview" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">Set job environment as staging</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">if</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">github.base_ref == 'main' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">contains(fromJSON('["opened", "synchronize"]'), github.event.action)</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">run</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#f97583">|</span></span>
<span class="line"><span style="color:#9db1c5">          echo "JOB_ENVIRONMENT=staging" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">Set job environment as production</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">if</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">github.base_ref == 'main' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">github.event.action == 'closed' &amp;&amp;</span></span>
<span class="line"><span style="color:#b392f0">          </span><span style="color:#ffab70">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">run</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">echo "JOB_ENVIRONMENT=production" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">      - </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">Set job environment output</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">id</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">job_environment</span></span>
<span class="line"><span style="color:#b392f0">        </span><span style="color:#f8f8f8">run</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#f97583">|</span></span>
<span class="line"><span style="color:#9db1c5">          echo "github_environment=$JOB_ENVIRONMENT" &gt;&gt; $GITHUB_OUTPUT</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">outputs</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">github_environment</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">${{ steps.job_environment.outputs.github_environment }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">deploy</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">needs</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">set_job_environment</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">environment</span><span style="color:#f97583">:</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">${{ needs.set_job_environment.outputs.github_environment }}</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c"># Other configurations</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976d2">on</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">pull_request</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">branches</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#22863a">main</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#22863a">develop</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">types</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#22863a">opened</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#22863a">synchronize</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#22863a">closed</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">jobs</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">set_job_environment</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">if</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">github.event.action != 'closed' ||</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#22863a">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">runs-on</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">ubuntu-latest</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">steps</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">Set job environment as pr-${{ github.event.number }}</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">if</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">github.base_ref == 'develop' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">contains(fromJSON('["opened", "synchronize"]'), github.event.action)</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">env</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#d32f2f">JOB_ENVIRONMENT</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">pr-${{ github.event.number }}</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">run</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">|</span></span>
<span class="line"><span style="color:#2b5581">          echo "JOB_ENVIRONMENT=$JOB_ENVIRONMENT" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">Set job environment as preview</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">if</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">github.base_ref == 'develop' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">github.event.action == 'closed' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">run</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">|</span></span>
<span class="line"><span style="color:#2b5581">          echo "JOB_ENVIRONMENT=preview" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">Set job environment as staging</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">if</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">github.base_ref == 'main' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">contains(fromJSON('["opened", "synchronize"]'), github.event.action)</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">run</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">|</span></span>
<span class="line"><span style="color:#2b5581">          echo "JOB_ENVIRONMENT=staging" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">Set job environment as production</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">if</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">github.base_ref == 'main' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">github.event.action == 'closed' &amp;&amp;</span></span>
<span class="line"><span style="color:#24292EFF">          </span><span style="color:#22863a">github.event.pull_request.merged == true</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">run</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">echo "JOB_ENVIRONMENT=production" &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">      - </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">Set job environment output</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">id</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">job_environment</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#d32f2f">run</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">|</span></span>
<span class="line"><span style="color:#2b5581">          echo "github_environment=$JOB_ENVIRONMENT" &gt;&gt; $GITHUB_OUTPUT</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">outputs</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">github_environment</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">${{ steps.job_environment.outputs.github_environment }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">deploy</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">needs</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">set_job_environment</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">environment</span><span style="color:#d32f2f">:</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">${{ needs.set_job_environment.outputs.github_environment }}</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5"># Other configurations</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="references" tabindex="-1">References</h2><ul><li><a href="https://github.com/actions/runner/issues/998" class="external-link" target="_blank" rel="noreferrer noopener">GitHub Actions Runner Issue</a>.</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to take a screenshot on macOS without the drop shadow?]]></title>
            <link>https://ansidev.xyz/posts/2023-02-17-how-to-take-a-screenshot-on-macos-without-the-drop-shadow</link>
            <guid>https://ansidev.xyz/posts/2023-02-17-how-to-take-a-screenshot-on-macos-without-the-drop-shadow</guid>
            <pubDate>Fri, 17 Feb 2023 14:12:43 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>You want to take a screenshots without drop shadows.</p><h2 id="solutions" tabindex="-1">Solutions</h2><p>There are several methods:</p><h4 id="method-1" tabindex="-1">Method 1</h4><p>Press and hold the Option key <kbd>⌥</kbd> while taking screenshot.</p><h4 id="method-2" tabindex="-1">Method 2</h4><p>Disable the drop shadow globally</p><p>Run this command in the Terminal</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">defaults write com.apple.screencapture disable-shadow -bool true &amp;&amp; killall SystemUIServer</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">defaults write com.apple.screencapture disable-shadow -bool true &amp;&amp; killall SystemUIServer</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><p>If you want to re-enable the drop shadow, run this command in the Terminal</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">defaults write com.apple.screencapture disable-shadow -bool false &amp;&amp; killall SystemUIServer</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">defaults write com.apple.screencapture disable-shadow -bool false &amp;&amp; killall SystemUIServer</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to debug interactive Go CLI command using VSCode?]]></title>
            <link>https://ansidev.xyz/posts/2023-01-25-how-to-debug-interactive-go-cli-command-using-vscode</link>
            <guid>https://ansidev.xyz/posts/2023-01-25-how-to-debug-interactive-go-cli-command-using-vscode</guid>
            <pubDate>Wed, 25 Jan 2023 08:50:51 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><blockquote><p>By default, if you use the generated launch configuration template for debugging Golang application, it won’t work for debugging an interactive command.</p></blockquote><p>Example launch configuration:</p><pre><code class="language-json"><div class="shiki-container language-json"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">{</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">"version"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"0.2.0"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">"configurations"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> [</span></span>
<span class="line"><span style="color:#b392f0">    {</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"name"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Debug"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"type"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"go"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"request"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"launch"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"mode"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"auto"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"program"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"${workspaceFolder}/main.go"</span></span>
<span class="line"><span style="color:#b392f0">    }</span></span>
<span class="line"><span style="color:#b392f0">  ]</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">{</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">"version"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"0.2.0"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">"configurations"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> [</span></span>
<span class="line"><span style="color:#24292EFF">    {</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"name"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Debug"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"type"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"go"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"request"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"launch"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"mode"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"auto"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"program"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"${workspaceFolder}/main.go"</span></span>
<span class="line"><span style="color:#24292EFF">    }</span></span>
<span class="line"><span style="color:#24292EFF">  ]</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Error should contain this message: <code class="">open /dev/tty: device not configured</code>.</p><h2 id="solutions" tabindex="-1">Solutions</h2><p>Add <code class="">"console": "integratedTerminal"</code> to your current launch configuration.</p><pre><code class="language-json"><div class="shiki-container language-json"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">{</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">"version"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"0.2.0"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">"configurations"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> [</span></span>
<span class="line"><span style="color:#b392f0">    {</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"name"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"Debug"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"type"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"go"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"request"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"launch"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"mode"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"auto"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"program"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"${workspaceFolder}/main.go"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      </span><span style="color:#f8f8f8">"console"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"integratedTerminal"</span></span>
<span class="line"><span style="color:#b392f0">    }</span></span>
<span class="line"><span style="color:#b392f0">  ]</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">{</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">"version"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"0.2.0"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">"configurations"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> [</span></span>
<span class="line"><span style="color:#24292EFF">    {</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"name"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"Debug"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"type"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"go"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"request"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"launch"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"mode"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"auto"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"program"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"${workspaceFolder}/main.go"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      </span><span style="color:#d32f2f">"console"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"integratedTerminal"</span></span>
<span class="line"><span style="color:#24292EFF">    }</span></span>
<span class="line"><span style="color:#24292EFF">  ]</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="references" tabindex="-1">References</h2><ul><li><a href="https://github.com/microsoft/vscode-cpptools/issues/3351#issuecomment-1073038774" class="external-link" target="_blank" rel="noreferrer noopener">Original answer</a>.</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to set environment variable?]]></title>
            <link>https://ansidev.xyz/posts/2023-02-02-how-to-set-environment-variable</link>
            <guid>https://ansidev.xyz/posts/2023-02-02-how-to-set-environment-variable</guid>
            <pubDate>Wed, 25 Jan 2023 08:50:51 GMT</pubDate>
            <description><![CDATA[
## Solutions

| Action                                      | macOS/Linux shell                                                                                                                                                                                                                                       | Powershell                                                                                                                                                               |
| ]]></description>
            <content:encoded><![CDATA[<h2 id="solutions" tabindex="-1">Solutions</h2><table><thead><tr><th>Action</th><th>macOS/Linux shell</th><th>Powershell</th></tr></thead><tbody><tr><td>List all environment variables</td><td><code class="">env</code> or <code class="">printenv</code> or <code class="">set</code></td><td><code class="">dir env:</code></td></tr><tr><td>Reference a variable</td><td><code class="">$name</code> or <code class="">${name}</code></td><td><code class="">$env:name</code></td></tr><tr><td>Print the value of the environment variable</td><td><code class="">echo $name</code></td><td><code class="">echo $env:name</code></td></tr><tr><td>Set local environment variable</td><td>Current process only: <code class="">name=value</code> or <code class="">set name=value</code><br>Current process and its child processes: <code class="">export name=value</code></td><td><code class="">$env:name = 'value'</code></td></tr><tr><td>Set global environment variable</td><td>Place an export command in your shell’s startup script of your home directory:<br><ul><li><code class="">~/.bashrc</code></li><li><code class="">~/.bash_profile</code></li><li><code class="">~/.zshrc</code></li><li><code class="">~/.zsh_profile</code></li><li><code class="">~/.profile</code></li></ul>or <code class="">/etc/profile</code> for system-wide operations.</td><td>User Variable: <code class="">[Environment]::SetEnvironmentVariable("name", "value" ,"User")</code><br>Machine Variable: <code class="">[Environment]::SetEnvironmentVariable("name", "value" ,"Machine")</code></td></tr><tr><td>Unset</td><td><code class="">name=</code> or <code class="">unset name</code></td><td>User Variable: <code class="">[Environment]::SetEnvironmentVariable("name", $null ,"User")</code><br>Machine Variable: <code class="">[Environment]::SetEnvironmentVariable("name", $null ,"Machine")</code></td></tr></tbody></table><p>Where:</p><ul><li><code class="">name</code>: The name of the environment variable you want to set.</li><li><code class="">value</code>: The value you want to assign to the new environment variable.</li></ul><h3 id="linux%2Fmacos" tabindex="-1">Linux/macOS</h3><ul><li>Environment variables in macOS/Unixes are <strong>case-sensitive</strong>.</li><li>Global environment variables (available to ALL processes) are named in <strong>uppercase</strong>, with <strong>words joined with underscore</strong> (_), e.g., JAVA_HOME.</li><li>Local variables (available to the current process only) are in <strong>lowercase</strong>.</li></ul><h3 id="windows" tabindex="-1">Windows</h3><ul><li>Environment variables are <strong>NOT case-sensitive</strong> (because the legacy DOS is NOT case-sensitive).</li><li>Environment variables are typically named in uppercase, with <strong>words joined with underscore</strong> (_), e.g., JAVA_HOME.</li></ul><h2 id="reference-links" tabindex="-1">Reference links</h2><ul><li><a href="https://www3.ntu.edu.sg/home/ehchua/programming/howto/Environment_Variables.html" class="external-link" target="_blank" rel="noreferrer noopener">Environment Variables in Windows/macOS/Linux</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to configure conventional commit for your project?]]></title>
            <link>https://ansidev.xyz/posts/2022-12-31-how-to-configure-conventional-commit-for-your-project</link>
            <guid>https://ansidev.xyz/posts/2022-12-31-how-to-configure-conventional-commit-for-your-project</guid>
            <pubDate>Sat, 31 Dec 2022 13:55:39 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="what-is-conventional-commit%3F" tabindex="-1">What is Conventional Commit?</h2><p><a href="https://conventionalcommits.org/" class="external-link" target="_blank" rel="noreferrer noopener">Conventional Commit</a> is</p><blockquote><p>A specification for adding human and machine readable meaning to commit messages</p></blockquote><p>In this tutorial, I will guide you on configuring conventional commit for a Javascript/TypeScript/NodeJS project.</p><h2 id="tutorial" tabindex="-1">Tutorial</h2><p>This tutorial uses <code class="">pnpm</code>.</p><h3 id="configure-husky" tabindex="-1">Configure <code class="">husky</code></h3><ol><li>Install dependency packages</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">add</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-D</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">husky</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">add</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-D</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">husky</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="2"><li>Active husky hook manually</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">exec</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">husky</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">install</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">exec</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">husky</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">install</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="3"><li>Active husky hook automatically on first time setting up project in the future</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">pkg</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">set</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">scripts.prepare=</span><span style="color:#ffab70">"husky install"</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">pkg</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">set</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">scripts.prepare=</span><span style="color:#22863a">"husky install"</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>Note:</strong></p><ul><li>You need to add the script <code class="">prepare</code> manually if it exists to avoid overwriting.</li><li><code class="">prepare</code> script is incompatible with <code class="">yarn berry</code> (v2+) at this moment.</li></ul><h3 id="configure-commitlint" tabindex="-1">Configure <code class="">commitlint</code></h3><ol><li>Install dependency packages</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">add</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-D</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">@commitlint/config-conventional</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">@commitlint/cli</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">add</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-D</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">@commitlint/config-conventional</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">@commitlint/cli</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="2"><li>Configure <code class="">commitlint</code> to use conventional config</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">echo </span><span style="color:#ffab70">'{ "extends": [ "@commitlint/config-conventional" ] }'</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">.commitlintrc.json</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'{ "extends": [ "@commitlint/config-conventional" ] }'</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">.commitlintrc.json</span></span>
<span class="line"></span></code></pre></div></code></pre><p>or</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">echo </span><span style="color:#ffab70">"module.exports = { extends: [ '@commitlint/config-conventional' ] }"</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">commitlint.config.js</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"module.exports = { extends: [ '@commitlint/config-conventional' ] }"</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">commitlint.config.js</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="3"><li>Add husky hook to validate commit message on committing</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">exec</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">husky</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">add</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">.husky/commit-msg</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'pnpm exec commitlint --edit ${1}'</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">exec</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">husky</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">add</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">.husky/commit-msg</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'pnpm exec commitlint --edit ${1}'</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="configure-commitizen" tabindex="-1">Configure <code class="">commitizen</code></h3><ol><li>Install dependency packages</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">add</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-D</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">commitizen</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">cz-conventional-changelog</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">add</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-D</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">commitizen</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">cz-conventional-changelog</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="2"><li>Init <code class="">commitizen</code> config</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">echo </span><span style="color:#ffab70">'{ "path": "./node_modules/cz-conventional-changelog" }'</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">.czrc</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'{ "path": "./node_modules/cz-conventional-changelog" }'</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">.czrc</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="3"><li>Add husky hook to trigger commitizen automatically on running <code class="">git commit</code></li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">exec</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">husky</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">add</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">.husky/prepare-commit-msg</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'exec &lt; /dev/tty &amp;&amp; [ -z "$(cat ${1})" ] &amp;&amp; pnpm exec cz --hook || true'</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">exec</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">husky</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">add</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">.husky/prepare-commit-msg</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'exec &lt; /dev/tty &amp;&amp; [ -z "$(cat ${1})" ] &amp;&amp; pnpm exec cz --hook || true'</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Advanced script for <code class="">prepare-commit-msg</code> hook</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">if</span><span style="color:#b392f0"> [ </span><span style="color:#f97583">-t</span><span style="color:#b392f0"> </span><span style="color:#f8f8f8">0</span><span style="color:#b392f0"> ];</span></span>
<span class="line"><span style="color:#f97583">then</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c"># running via terminal</span></span>
<span class="line"><span style="color:#b392f0">  exec </span><span style="color:#f97583">&lt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/dev/tty</span><span style="color:#b392f0"> </span><span style="color:#bbb">&amp;&amp;</span><span style="color:#b392f0"> [ </span><span style="color:#f97583">-z</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"$(</span><span style="color:#b392f0">cat</span><span style="color:#ffab70"> ${1})"</span><span style="color:#b392f0"> ] </span><span style="color:#bbb">&amp;&amp;</span><span style="color:#b392f0"> pnpm </span><span style="color:#9db1c5">exec</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">cz</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--hook</span><span style="color:#b392f0"> </span><span style="color:#f97583">||</span><span style="color:#b392f0"> true</span></span>
<span class="line"><span style="color:#f97583">else</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#6b737c"># running via GUI</span></span>
<span class="line"><span style="color:#b392f0">  [ </span><span style="color:#f97583">-z</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"$(</span><span style="color:#b392f0">cat</span><span style="color:#ffab70"> ${1})"</span><span style="color:#b392f0"> ] </span><span style="color:#bbb">&amp;&amp;</span><span style="color:#b392f0"> pnpm </span><span style="color:#9db1c5">exec</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">cz</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--hook</span><span style="color:#b392f0"> </span><span style="color:#f97583">||</span><span style="color:#b392f0"> true</span></span>
<span class="line"><span style="color:#f97583">fi</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">if</span><span style="color:#24292EFF"> [ </span><span style="color:#d32f2f">-t</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">0</span><span style="color:#24292EFF"> ];</span></span>
<span class="line"><span style="color:#d32f2f">then</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5"># running via terminal</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#6f42c1">exec</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&lt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/dev/tty</span><span style="color:#24292EFF"> </span><span style="color:#212121">&amp;&amp;</span><span style="color:#24292EFF"> [ </span><span style="color:#d32f2f">-z</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"$(</span><span style="color:#6f42c1">cat</span><span style="color:#22863a"> ${1})"</span><span style="color:#24292EFF"> ] </span><span style="color:#212121">&amp;&amp;</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">exec</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">cz</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--hook</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">||</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">true</span></span>
<span class="line"><span style="color:#d32f2f">else</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#c2c3c5"># running via GUI</span></span>
<span class="line"><span style="color:#24292EFF">  [ </span><span style="color:#d32f2f">-z</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"$(</span><span style="color:#6f42c1">cat</span><span style="color:#22863a"> ${1})"</span><span style="color:#24292EFF"> ] </span><span style="color:#212121">&amp;&amp;</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">exec</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">cz</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--hook</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">||</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">true</span></span>
<span class="line"><span style="color:#d32f2f">fi</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="4"><li>Add badge (optional) to <code class="">README.md</code></li></ol><pre><code class="language-markdown"><div class="shiki-container language-markdown"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#1976d2;text-decoration:underline">[</span><span style="color:#79b8ff;text-decoration:underline">![</span><span style="color:#9db1c5;text-decoration:underline">Commitizen friendly</span><span style="color:#79b8ff;text-decoration:underline">]</span><span style="color:#ffab70;text-decoration:underline">(https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)</span><span style="color:#1976d2;text-decoration:underline">]</span><span style="color:#ffab70;text-decoration:underline">(http://commitizen.github.io/cz-cli/)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#1976d2;text-decoration:underline">[</span><span style="color:#d32f2f;text-decoration:underline">![Commitizen friendly]</span><span style="color:#22863a;text-decoration:underline">(https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)</span><span style="color:#1976d2;text-decoration:underline">]</span><span style="color:#22863a;text-decoration:underline">(http://commitizen.github.io/cz-cli/)</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to disable telemetry in Astro project?]]></title>
            <link>https://ansidev.xyz/posts/2022-12-31-how-to-disable-astro-telemetry</link>
            <guid>https://ansidev.xyz/posts/2022-12-31-how-to-disable-astro-telemetry</guid>
            <pubDate>Sat, 31 Dec 2022 11:29:48 GMT</pubDate>
            <description><![CDATA[
## Problem

> Telemetry is anonymous data that provides the Astro team insights into which Astro features are most often used.

By default, Astro will collect these anonymous data when it runs.

Telemetry config will be saved to a config file.

Source code: [config.ts](https://github.com/withastro/astro/blob/main/packages/telemetry/src/config.ts)

| OS      | Config                                                  |
| ]]></description>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><blockquote><p>Telemetry is anonymous data that provides the Astro team insights into which Astro features are most often used.</p></blockquote><p>By default, Astro will collect these anonymous data when it runs.</p><p>Telemetry config will be saved to a config file.</p><p>Source code: <a href="https://github.com/withastro/astro/blob/main/packages/telemetry/src/config.ts" class="external-link" target="_blank" rel="noreferrer noopener">config.ts</a></p><table><thead><tr><th>OS</th><th>Config</th></tr></thead><tbody><tr><td>macOS</td><td><code class="">$HOME/Library/Preferences/astro/config.json</code></td></tr><tr><td>Windows</td><td><code class="">$USERPROFILE\AppData\Roaming\astro\Config\config.json</code></td></tr><tr><td>Linux</td><td><code class="">$HOME/.config/astro/config.json</code></td></tr></tbody></table><p>We see how to disable telemetry.</p><h2 id="solutions" tabindex="-1">Solutions</h2><ol><li><p>Use <code class="">astro</code> command</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">run</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">astro</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">telemetry</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">disable</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">run</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">astro</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">telemetry</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">disable</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You can run it automatically on the first-time setting up the project.</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm </span><span style="color:#9db1c5">pkg</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">set</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">scripts.prepare=</span><span style="color:#ffab70">"astro telemetry disable"</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">pnpm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">pkg</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">set</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">scripts.prepare=</span><span style="color:#22863a">"astro telemetry disable"</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Additional method</p><p>Block Astro’s telemetry domain by adding this line to OS’s host file.</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">127.0.0.1 telemetry.astro.build</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">127.0.0.1 telemetry.astro.build</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to init Astro project using yarn berry?]]></title>
            <link>https://ansidev.xyz/posts/2022-12-20-how-to-init-astro-project-using-yarn-berry</link>
            <guid>https://ansidev.xyz/posts/2022-12-20-how-to-init-astro-project-using-yarn-berry</guid>
            <pubDate>Tue, 20 Dec 2022 05:20:20 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>At this moment, if you are trying to init a new Astro project, you will experience some technical problems and the Astro project does not run properly as expected.</p><p>GitHub issue: <a href="https://github.com/withastro/astro/issues/5637" class="external-link" target="_blank" rel="noreferrer noopener">#5637</a>.</p><h2 id="workaround" tabindex="-1">Workaround</h2><ol><li><p>Dependency modules was not installed.</p><ul><li>cd into project root folder.</li><li>Create an empty <code class="">yarn.lock</code>.</li><li>Run <code class="">yarn install</code>.</li><li>Run <code class="">yarn dev</code>.</li></ul></li><li><p>Astro page displays an error.</p><ul><li><p>Add this line into <code class="">.yarnrc.yml</code>.</p><pre><code class="language-yaml"><div class="shiki-container language-yaml"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f8f8f8">nodeLinker</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">node-modules</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">nodeLinker</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">node-modules</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Run <code class="">yarn install</code>.</p></li><li><p>Run <code class="">yarn dev</code></p></li><li><p>Refresh the Astro page.</p></li></ul></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to set nvim telescope prompt input position?]]></title>
            <link>https://ansidev.xyz/posts/2022-12-13-how-to-set-nvim-telescope-prompt-input-position</link>
            <guid>https://ansidev.xyz/posts/2022-12-13-how-to-set-nvim-telescope-prompt-input-position</guid>
            <pubDate>Tue, 13 Dec 2022 10:37:16 GMT</pubDate>
            <description><![CDATA[
## Problem

By default, the Telescope prompt input is at the bottom. I want to move it to the top.

## Solution

Add this options

```lua
{
  defaults = {
    layout_strategy = "horizontal",
    layout_config = {
      horizontal = {
        prompt_position = "top",
      },
    },
    sorting_strategy = "ascending",
    ]]></description>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>By default, the Telescope prompt input is at the bottom. I want to move it to the top.</p><h2 id="solution" tabindex="-1">Solution</h2><p>Add this options</p><pre><code class="language-lua"><div class="shiki-container language-lua"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">{</span></span>
<span class="line"><span style="color:#b392f0">  defaults </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">    layout_strategy </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"horizontal"</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    layout_config </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">      horizontal </span><span style="color:#f97583">=</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">        prompt_position </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"top"</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">      },</span></span>
<span class="line"><span style="color:#b392f0">    },</span></span>
<span class="line"><span style="color:#b392f0">    sorting_strategy </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"ascending"</span><span style="color:#b392f0">,</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#6b737c">--- other configs</span></span>
<span class="line"><span style="color:#b392f0">  },</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">{</span></span>
<span class="line"><span style="color:#24292EFF">  defaults </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">    layout_strategy </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"horizontal"</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    layout_config </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">      horizontal </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">        prompt_position </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"top"</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">      },</span></span>
<span class="line"><span style="color:#24292EFF">    },</span></span>
<span class="line"><span style="color:#24292EFF">    sorting_strategy </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"ascending"</span><span style="color:#24292EFF">,</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#c2c3c5">--- other configs</span></span>
<span class="line"><span style="color:#24292EFF">  },</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[English linking words note]]></title>
            <link>https://ansidev.xyz/posts/2022-12-13-english-linking-words-note</link>
            <guid>https://ansidev.xyz/posts/2022-12-13-english-linking-words-note</guid>
            <pubDate>Tue, 13 Dec 2022 10:11:57 GMT</pubDate>
            <description><![CDATA[
My quick note about English link words

<!-- more -->

## Note

| Speaking | Writing              |
| ]]></description>
            <content:encoded><![CDATA[<h2 id="note" tabindex="-1">Note</h2><table><thead><tr><th>Speaking</th><th>Writing</th></tr></thead><tbody><tr><td>Also</td><td>Moreover</td></tr><tr><td>Anyway</td><td>Nevertheless</td></tr><tr><td>I think</td><td>In my opinion (~IMO)</td></tr><tr><td>So</td><td>Therefore</td></tr><tr><td>And</td><td>In addition</td></tr><tr><td>But</td><td>However</td></tr></tbody></table>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to read environment variables in astro.config.mjs?]]></title>
            <link>https://ansidev.xyz/posts/2022-12-12-how-to-read-environment-variables-in-astro-config</link>
            <guid>https://ansidev.xyz/posts/2022-12-12-how-to-read-environment-variables-in-astro-config</guid>
            <pubDate>Mon, 12 Dec 2022 15:07:09 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>You want to read environment variables from env file (ex. <code class="">.env</code>) in <code class="">astro.config.mjs</code> for development purposes.</p><p>However, according to the official document, Astro does not support it official and the only way.</p><p>You can read about it <a href="https://docs.astro.build/en/guides/configuring-astro/#environment-variables" class="external-link" target="_blank" rel="noreferrer noopener">here</a>.</p><h2 id="solution" tabindex="-1">Solution</h2><p>In this article, I will guide you how to solve this issue.</p><p>Requirement:</p><ul><li>I have two sites in two languages: English and Vietnamese.</li><li>Each site will display different region.<ul><li>English: Region = <code class="">US</code>.</li><li>Vietnamese: Region = <code class="">VN</code>.</li></ul></li></ul><p>Steps:</p><ol><li><p>Create a new Astro project</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm create astro@latest</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">pnpm create astro@latest</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li><li><p>Create <code class="">.env.en.local</code>.</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">VITE_REGION=US</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">VITE_REGION=US</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li><li><p>Create <code class="">.env.vi.local</code>.</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">VITE_REGION=VN</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">VITE_REGION=VN</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li><li><p>Install dependencies</p><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">pnpm add -D dotenv cross-env</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">pnpm add -D dotenv cross-env</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre></li><li><p>Add two scripts to <code class="">package.json</code>.</p><pre><code class="language-json"><div class="shiki-container language-json"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">{</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f8f8f8">"scripts"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">"dev:en"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"cross-env SITE_LANG=en astro dev"</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f8f8f8">"dev:vi"</span><span style="color:#bbb">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"cross-env SITE_LANG=vi astro dev"</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#6b737c">// other scripts</span></span>
<span class="line"><span style="color:#b392f0">  }</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">{</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">"scripts"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">"dev:en"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"cross-env SITE_LANG=en astro dev"</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">"dev:vi"</span><span style="color:#212121">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"cross-env SITE_LANG=vi astro dev"</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#c2c3c5">// other scripts</span></span>
<span class="line"><span style="color:#24292EFF">  }</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Update <code class="">astro.config.mjs</code></p><pre><code class="language-ts"><div class="shiki-container language-ts"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">import</span><span style="color:#b392f0"> dotenv </span><span style="color:#f97583">from</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'dotenv'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f97583">const</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">lang</span><span style="color:#b392f0"> </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">process</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">env</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">SITE_LANG</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f97583">const</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">envPath</span><span style="color:#b392f0"> </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">`.env.</span><span style="color:#f97583">${</span><span style="color:#b392f0">lang</span><span style="color:#f97583">}</span><span style="color:#ffab70">.local`</span></span>
<span class="line"><span style="color:#79b8ff">dotenv</span><span style="color:#b392f0">.config({ path</span><span style="color:#f97583">:</span><span style="color:#b392f0"> envPath })</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">import</span><span style="color:#24292EFF"> dotenv </span><span style="color:#d32f2f">from</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'dotenv'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">const</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">lang</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">process</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">env</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">SITE_LANG</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">const</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">envPath</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">`.env.</span><span style="color:#d32f2f">${</span><span style="color:#24292EFF">lang</span><span style="color:#d32f2f">}</span><span style="color:#22863a">.local`</span></span>
<span class="line"><span style="color:#1976d2">dotenv</span><span style="color:#6f42c1">.config</span><span style="color:#24292EFF">({ path</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> envPath })</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Now, you can read environment variables from env file anywhere in Astro app.</p><pre><code class="language-ts"><div class="shiki-container language-ts"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">const</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">region</span><span style="color:#b392f0"> </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#f97583">import</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">meta</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">env</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">VITE_REGION</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">const</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">region</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">import</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">meta</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">env</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">VITE_REGION</span></span>
<span class="line"></span></code></pre></div></code></pre></li></ol><p>You can checkout the demo source code <a href="https://github.com/ansidev/astro-demo-loading-environment-variables" class="external-link" target="_blank" rel="noreferrer noopener">here</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to generate the public key in another format from SSH private key?]]></title>
            <link>https://ansidev.xyz/posts/2022-11-12-how-to-generate-the-public-key-in-another-format-from-ssh-private-key</link>
            <guid>https://ansidev.xyz/posts/2022-11-12-how-to-generate-the-public-key-in-another-format-from-ssh-private-key</guid>
            <pubDate>Sat, 12 Nov 2022 08:45:13 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>I want to generate public key in PEM/PKCS8 format from SSH private key.</p><h2 id="solution" tabindex="-1">Solution</h2><p>Update your code looks like this:</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ssh-keygen </span><span style="color:#9db1c5">-f</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">{path_to_ssh_private_key}</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-e</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-m</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">{output_format}</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">{path_to_output_key}</span></span>
<span class="line"><span style="color:#b392f0">ssh-keygen </span><span style="color:#9db1c5">-f</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">id_rsa</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-e</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-m</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">PEM</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">id_rsa.pem</span></span>
<span class="line"><span style="color:#b392f0">ssh-keygen </span><span style="color:#9db1c5">-f</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">id_rsa</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-e</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-m</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">PKCS8</span><span style="color:#b392f0"> </span><span style="color:#f97583">&gt;</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">id_rsa.pem</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">ssh-keygen</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-f</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">{path_to_ssh_private_key}</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-e</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-m</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">{output_format}</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">{path_to_output_key}</span></span>
<span class="line"><span style="color:#6f42c1">ssh-keygen</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-f</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">id_rsa</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-e</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-m</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">PEM</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">id_rsa.pem</span></span>
<span class="line"><span style="color:#6f42c1">ssh-keygen</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-f</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">id_rsa</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-e</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-m</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">PKCS8</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&gt;</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">id_rsa.pem</span></span>
<span class="line"></span></code></pre></div></code></pre><p>For more information, you can read the manual:</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">man </span><span style="color:#9db1c5">ssh-keygen</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">man</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">ssh-keygen</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Go Channel]]></title>
            <link>https://ansidev.xyz/posts/2022-11-10-go-channel</link>
            <guid>https://ansidev.xyz/posts/2022-11-10-go-channel</guid>
            <pubDate>Thu, 10 Nov 2022 06:44:27 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote><p>Channels are a typed conduit through which you can send and receive values with the channel operator, <code class="">&lt;-</code>.</p></blockquote><ul><li><p>Channel can only save homogeneous data type. So you must declare the type of the channel you want to create.</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0"> </span><span style="color:#6b737c">// channel only accepts int</span></span>
<span class="line"><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">string</span><span style="color:#b392f0"> </span><span style="color:#6b737c">// channel only accepts string</span></span>
<span class="line"><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">bool</span><span style="color:#b392f0"> </span><span style="color:#6b737c">// channel only accepts bool</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5">// channel only accepts int</span></span>
<span class="line"><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">string</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5">// channel only accepts string</span></span>
<span class="line"><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">bool</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5">// channel only accepts bool</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>You need to initialize a channel before using it with <code class="">make</code>, otherwise the channel is <code class="">nil</code> and not available to use.</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#6b737c">// Syntax: {variable_name} := make(chan {type})</span></span>
<span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// works</span></span>
<span class="line"><span style="color:#f97583">var</span><span style="color:#b392f0"> ch2 </span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0"> </span><span style="color:#6b737c">// don't work</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#c2c3c5">// Syntax: {variable_name} := make(chan {type})</span></span>
<span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// works</span></span>
<span class="line"><span style="color:#d32f2f">var</span><span style="color:#24292EFF"> ch2 </span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF"> </span><span style="color:#c2c3c5">// don't work</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>You need to initialize a channel before using it with <code class="">make</code>.</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// int is type of channel data</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// int is type of channel data</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Sending/Receiving data using channel:</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">x </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> </span><span style="color:#f97583">&lt;-</span><span style="color:#b392f0"> ch </span><span style="color:#6b737c">// read data from channel ch into variable x</span></span>
<span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">&lt;-</span><span style="color:#b392f0"> y </span><span style="color:#6b737c">// send y to the channel ch</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">x </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">&lt;-</span><span style="color:#24292EFF"> ch </span><span style="color:#c2c3c5">// read data from channel ch into variable x</span></span>
<span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">&lt;-</span><span style="color:#24292EFF"> y </span><span style="color:#c2c3c5">// send y to the channel ch</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Close a channel:</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">close(ch)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">close</span><span style="color:#24292EFF">(ch)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Note: You <strong>cannot</strong> send data to a closed channel.</p></li><li><p>Type of channels:</p><ul><li><code class="">unbuffered channel</code>: a channel is created with no capacity.<pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#6b737c">// Syntax: {variable_name} := make(chan {type})</span></span>
<span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// unbuffered channel</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#c2c3c5">// Syntax: {variable_name} := make(chan {type})</span></span>
<span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// unbuffered channel</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><code class="">buffered channel</code>: a channel is created with capacity.<pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#6b737c">// Syntax: {variable_name} := make(chan {type}, {capacity})</span></span>
<span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">, </span><span style="color:#f8f8f8">5</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// buffered channel, capacity = 5</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#c2c3c5">// Syntax: {variable_name} := make(chan {type}, {capacity})</span></span>
<span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">, </span><span style="color:#1976d2">5</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// buffered channel, capacity = 5</span></span>
<span class="line"></span></code></pre></div></code></pre></li></ul></li><li><p>Channel blocking mechanism:</p><ul><li><p>Unbuffered channel</p><p>Sending and receiving are blocked until the other side is ready. This allows goroutines to synchronize without explicit locks or condition variables.</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// unbuffered channel</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// unbuffered channel</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Buffered channel</p><p>Sending data to a buffered channel are blocked only when the buffer is full.</p><p>Receiving data from a buffered channel are blocked only when the buffer is empty.</p><pre><code class="language-go"><div class="shiki-container language-go"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ch </span><span style="color:#f97583">:=</span><span style="color:#b392f0"> make(</span><span style="color:#f97583">chan</span><span style="color:#b392f0"> </span><span style="color:#f97583">int</span><span style="color:#b392f0">, </span><span style="color:#f8f8f8">5</span><span style="color:#b392f0">) </span><span style="color:#6b737c">// buffered channel</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">ch </span><span style="color:#d32f2f">:=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">make</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">chan</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">int</span><span style="color:#24292EFF">, </span><span style="color:#1976d2">5</span><span style="color:#24292EFF">) </span><span style="color:#c2c3c5">// buffered channel</span></span>
<span class="line"></span></code></pre></div></code></pre></li></ul></li><li><p>Deadlock with channel</p><p>A deadlock happens when a group of goroutines are waiting for each other and none of them is able to proceed. Examples:</p><ul><li>The data which are sent into a channel cannot be received by any receiver anywhere in your code.</li><li>You try to read data from a channel but there is no data are sent to the channel anywhere in your code.</li></ul></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to fix "__dirname is not defined in ES module scope" in JS]]></title>
            <link>https://ansidev.xyz/posts/2022-11-05-how-to-fix-dirname-is-not-defined-in-es-module-scope-in-js</link>
            <guid>https://ansidev.xyz/posts/2022-11-05-how-to-fix-dirname-is-not-defined-in-es-module-scope-in-js</guid>
            <pubDate>Fri, 04 Nov 2022 17:45:15 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>Lines of code looks like this</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">import</span><span style="color:#b392f0"> path </span><span style="color:#f97583">from</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'path'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79b8ff">path</span><span style="color:#b392f0">.join(__dirname</span><span style="color:#bbb">,</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'children'</span><span style="color:#b392f0">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">import</span><span style="color:#24292EFF"> path </span><span style="color:#d32f2f">from</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'path'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976d2">path</span><span style="color:#6f42c1">.join</span><span style="color:#24292EFF">(__dirname</span><span style="color:#212121">,</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'children'</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>will produce the error</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ReferenceError</span><span style="color:#bbb">:</span><span style="color:#b392f0"> __dirname is not defined </span><span style="color:#f97583">in</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">ES</span><span style="color:#b392f0"> </span><span style="color:#f97583">module</span><span style="color:#b392f0"> scope</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">ReferenceError</span><span style="color:#212121">:</span><span style="color:#24292EFF"> __dirname is not defined </span><span style="color:#d32f2f">in</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">ES</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">module</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">scope</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="solution" tabindex="-1">Solution</h2><p>Update your code looks like this</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">import</span><span style="color:#b392f0"> path </span><span style="color:#f97583">from</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'path'</span></span>
<span class="line"><span style="color:#f97583">import</span><span style="color:#b392f0"> { fileURLToPath } </span><span style="color:#f97583">from</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'url'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#f97583">const</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">__filename</span><span style="color:#b392f0"> </span><span style="color:#f97583">=</span><span style="color:#b392f0"> fileURLToPath(</span><span style="color:#f97583">import</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">meta</span><span style="color:#b392f0">.url)</span></span>
<span class="line"><span style="color:#f97583">const</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">__dirname</span><span style="color:#b392f0"> </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">path</span><span style="color:#b392f0">.dirname(__filename)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79b8ff">path</span><span style="color:#b392f0">.join(__dirname</span><span style="color:#bbb">,</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'children'</span><span style="color:#b392f0">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">import</span><span style="color:#24292EFF"> path </span><span style="color:#d32f2f">from</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'path'</span></span>
<span class="line"><span style="color:#d32f2f">import</span><span style="color:#24292EFF"> { fileURLToPath } </span><span style="color:#d32f2f">from</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'url'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#d32f2f">const</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">__filename</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">fileURLToPath</span><span style="color:#24292EFF">(</span><span style="color:#d32f2f">import</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">meta</span><span style="color:#24292EFF">.url)</span></span>
<span class="line"><span style="color:#d32f2f">const</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">__dirname</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">path</span><span style="color:#6f42c1">.dirname</span><span style="color:#24292EFF">(__filename)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976d2">path</span><span style="color:#6f42c1">.join</span><span style="color:#24292EFF">(__dirname</span><span style="color:#212121">,</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'children'</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to work with multiple git accounts on a single machine?]]></title>
            <link>https://ansidev.xyz/posts/2022-10-10-how-to-work-with-multiple-git-accounts-on-a-single-machine</link>
            <guid>https://ansidev.xyz/posts/2022-10-10-how-to-work-with-multiple-git-accounts-on-a-single-machine</guid>
            <pubDate>Mon, 10 Oct 2022 08:29:35 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>Assuming I have two Github accounts:</p><ul><li><code class="">gh-user1</code> (email: <a href="mailto:gh-user1@github.com" class="mailto-link">gh-user1@github.com</a>).</li><li><code class="">gh-user2</code> (email: <a href="mailto:gh-user2@github.com" class="mailto-link">gh-user2@github.com</a>).</li></ul><p>I am using gh-user1 as the global GitHub account on my local computer.</p><p>Now I want to setup my computer to commit and push as <code class="">gh-user2</code> on project X.</p><p>How can I setup the account <code class="">gh-user2</code> on my local computer?</p><h2 id="solution" tabindex="-1">Solution</h2><h3 id="steps" tabindex="-1">Steps</h3><ol><li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" class="external-link" target="_blank" rel="noreferrer noopener">Generating a new SSH key and adding it to the ssh-agent</a>.</li><li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account" class="external-link" target="_blank" rel="noreferrer noopener">Adding a new SSH key to your GitHub account</a>.</li><li><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key" class="external-link" target="_blank" rel="noreferrer noopener">Generating a new GPG key</a>.</li><li><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-gpg-key-to-your-github-account" class="external-link" target="_blank" rel="noreferrer noopener">Adding a GPG key to your GitHub account</a>.</li><li>Open the terminal and cd into root folder of project X.</li><li>Run following commands:</li></ol><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#6b737c"># Setup user email</span></span>
<span class="line"><span style="color:#b392f0">git </span><span style="color:#9db1c5">config</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--local</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user.email</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'gh-user2@github.com'</span><span style="color:#9db1c5">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c"># Setup user display name</span></span>
<span class="line"><span style="color:#b392f0">git </span><span style="color:#9db1c5">config</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--local</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user.name</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'Your display name'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c"># Setup ssh command to forcing use the specific private key for this Git project only</span></span>
<span class="line"><span style="color:#b392f0">git </span><span style="color:#9db1c5">config</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--local</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">core.sshCommand</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'ssh -i /path/to/your-ssh-private-key'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c"># Setup local GPG signing key</span></span>
<span class="line"><span style="color:#b392f0">git </span><span style="color:#9db1c5">config</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--local</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user.signingkey</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">{your_gpg_signing_key_id}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6b737c"># Enable signing commit feature</span></span>
<span class="line"><span style="color:#b392f0">git </span><span style="color:#9db1c5">config</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--local</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">commit.gpgsign</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">true</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#c2c3c5"># Setup user email</span></span>
<span class="line"><span style="color:#6f42c1">git</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">config</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--local</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user.email</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'gh-user2@github.com'</span><span style="color:#2b5581">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5"># Setup user display name</span></span>
<span class="line"><span style="color:#6f42c1">git</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">config</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--local</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user.name</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'Your display name'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5"># Setup ssh command to forcing use the specific private key for this Git project only</span></span>
<span class="line"><span style="color:#6f42c1">git</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">config</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--local</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">core.sshCommand</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'ssh -i /path/to/your-ssh-private-key'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5"># Setup local GPG signing key</span></span>
<span class="line"><span style="color:#6f42c1">git</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">config</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--local</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user.signingkey</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">{your_gpg_signing_key_id}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#c2c3c5"># Enable signing commit feature</span></span>
<span class="line"><span style="color:#6f42c1">git</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">config</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--local</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">commit.gpgsign</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">true</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You can add an alias to your shell command for easily applying.</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">alias</span><span style="color:#b392f0"> git-gh-user-2</span><span style="color:#f97583">=</span><span style="color:#ffab70">"git config --local user.email 'gh-user2@github.com' &amp;&amp; git config --local user.name 'Your display name' &amp;&amp; git config --local user.signingkey {your_gpg_signing_key_id} &amp;&amp; git config --local commit.gpgsign true &amp;&amp; git config --local commit.gpgsign true"</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">alias</span><span style="color:#24292EFF"> git-gh-user-2</span><span style="color:#d32f2f">=</span><span style="color:#22863a">"git config --local user.email 'gh-user2@github.com' &amp;&amp; git config --local user.name 'Your display name' &amp;&amp; git config --local user.signingkey {your_gpg_signing_key_id} &amp;&amp; git config --local commit.gpgsign true &amp;&amp; git config --local commit.gpgsign true"</span></span>
<span class="line"></span></code></pre></div></code></pre><p>For the future project, if you want to commit and push as gh-user2 on new projects, just cd into the project and run the alias command.</p><h2 id="conclusion" tabindex="-1">Conclusion</h2><p>You can find many other solutions on the Internet. If it works for you, just use them.</p><p>I am using 2 GitHub accounts for this solution but you can apply it for other Git hosting providers (GitLab, BitBucket, etc…).</p><p>If you find my articles and projects useful to you, consider donating to me at:</p><ul><li><a href="https://paypal.me/ansidev" class="external-link" target="_blank" rel="noreferrer noopener">Paypal</a></li><li><a href="https://ko-fi.com/ansidev" class="external-link" target="_blank" rel="noreferrer noopener">Ko-fi</a></li><li><a href="https://buymeacoffee.com/ansidev" class="external-link" target="_blank" rel="noreferrer noopener">Buy me a coffee</a></li><li><a href="https://me.momo.vn/ansidev" class="external-link" target="_blank" rel="noreferrer noopener">Momo</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What is the maximum length of the multiplication of two integers?]]></title>
            <link>https://ansidev.xyz/posts/2022-10-06-what-is-the-maximum-length-of-the-multiplication-of-two-integers</link>
            <guid>https://ansidev.xyz/posts/2022-10-06-what-is-the-maximum-length-of-the-multiplication-of-two-integers</guid>
            <pubDate>Thu, 06 Oct 2022 15:43:15 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="question" tabindex="-1">Question</h2><p>Given two non-negative integers <code class="">m1</code> and <code class="">n1</code>, <code class="">m1</code> has <code class="">m</code> digits and <code class="">n1</code> has <code class="">n</code> digits. <code class="">p1</code> is the product of <code class="">m1</code> and <code class="">n1</code> (<code class="">p1 = m1 x n1</code>), <code class="">p1</code> has <code class="">p</code> digits.</p><p>What is the maximum value of <code class="">p</code>?</p><h2 id="answer" tabindex="-1">Answer</h2><ul><li>0 ≤ m1 ≤ 10<sup>m</sup> - 1</li><li>0 ≤ n1 ≤ 10<sup>n</sup> - 1</li><li>10<sup>k</sup> - 1 is an integer has k digits of 9</li></ul><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">10^k - 1 = 9.....9</span></span>
<span class="line"><span style="color:#b392f0">           |_____|</span></span>
<span class="line"><span style="color:#b392f0">        k digits of 9</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">10^k - 1 = 9.....9</span></span>
<span class="line"><span style="color:#24292eff">           |_____|</span></span>
<span class="line"><span style="color:#24292eff">        k digits of 9</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><p>p1 = m1 x n1 ≤ (10<sup>m</sup> -1) x (10<sup>n</sup> -1)<br>&nbsp;&nbsp; = 10<sup>m+n</sup> - 10<sup>m</sup> - 10<sup>m</sup> + 1<br>&nbsp;&nbsp; = 10<sup>m+n</sup> - 1 - (10<sup>m</sup> - 1) - (10<sup>m</sup> - 1)<br>&nbsp;&nbsp; ≤ 10<sup>m+n</sup> - 1</p><p>So, p1 can have maximum <code class="">m + n</code> digits.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Change the default shell on Unix]]></title>
            <link>https://ansidev.xyz/posts/2022-08-24-change-default-shell-on-unix</link>
            <guid>https://ansidev.xyz/posts/2022-08-24-change-default-shell-on-unix</guid>
            <pubDate>Wed, 24 Aug 2022 15:29:40 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="solution" tabindex="-1">Solution</h2><h3 id="list-your-shells" tabindex="-1">List your shells</h3><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">cat </span><span style="color:#9db1c5">/etc/shells</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">cat</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/etc/shells</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="find-your-current-shell" tabindex="-1">Find your current shell</h3><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">echo $SHELL</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> $SHELL</span></span>
<span class="line"></span></code></pre></div></code></pre><h3 id="change-your-default-shell" tabindex="-1">Change your default shell</h3><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">chsh </span><span style="color:#9db1c5">-s</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/path/to/shell</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">chsh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-s</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/path/to/shell</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Examples:</p><pre><code class="language-sh"><div class="shiki-container language-sh"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">chsh </span><span style="color:#9db1c5">-s</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/bin/sh</span></span>
<span class="line"><span style="color:#b392f0">chsh </span><span style="color:#9db1c5">-s</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/bin/bash</span></span>
<span class="line"><span style="color:#b392f0">chsh </span><span style="color:#9db1c5">-s</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/bin/zsh</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">chsh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-s</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/bin/sh</span></span>
<span class="line"><span style="color:#6f42c1">chsh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-s</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/bin/bash</span></span>
<span class="line"><span style="color:#6f42c1">chsh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-s</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/bin/zsh</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="references" tabindex="-1">References</h2><ul><li><a href="https://www.cyberciti.biz/faq/change-my-default-shell-in-linux-using-chsh/" class="external-link" target="_blank" rel="noreferrer noopener">https://www.cyberciti.biz/faq/change-my-default-shell-in-linux-using-chsh/</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to resolve "Authentication error" on login screen after locking your Ubuntu?]]></title>
            <link>https://ansidev.xyz/posts/2022-08-24-how-to-resolve-authentication-error-on-login-screen-after-locking-your-ubuntu</link>
            <guid>https://ansidev.xyz/posts/2022-08-24-how-to-resolve-authentication-error-on-login-screen-after-locking-your-ubuntu</guid>
            <pubDate>Wed, 24 Aug 2022 08:41:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>After locking screen on Ubuntu, the next time you login, you see the message “Authentication error” on login screen and cannot type your password anymore to login.</p><img class="medium-zoom mx-auto" src="/uploads/2022/08/24/authentication-error.webp" alt="Authentication Error"><h2 id="solution" tabindex="-1">Solution</h2><blockquote><p>On the login screen, Press <code class="">Ctrl + Alt + F3</code> to open a terminal, or use SSH to access from another computer. To unlock all sessions, type <code class="">sudo loginctl unlock-sessions</code>. Then press <code class="">Ctrl + Alt + F2</code>, for example, to go back to your (now unlocked) session.</p></blockquote><blockquote><p>This does not solve the underlying problem, but lets you quickly get back to your session to save your work and try configuration changes, without having to reboot.</p></blockquote><h2 id="references" tabindex="-1">References</h2><ul><li><a href="https://askubuntu.com/questions/1032624/ubuntu-18-04-authentication-error-on-loging-after-lock" class="external-link" target="_blank" rel="noreferrer noopener">https://askubuntu.com/questions/1032624/ubuntu-18-04-authentication-error-on-loging-after-lock</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The difference between `solve` and `resolve`]]></title>
            <link>https://ansidev.xyz/posts/2022-08-24-the-difference-between-solve-and-resolve</link>
            <guid>https://ansidev.xyz/posts/2022-08-24-the-difference-between-solve-and-resolve</guid>
            <pubDate>Wed, 24 Aug 2022 08:06:50 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="meanings" tabindex="-1">Meanings</h2><p>According to <a href="https://dictionary.cambridge.org/dictionary/english/" class="external-link" target="_blank" rel="noreferrer noopener">Cambridge dictionary</a>:</p><ul><li><code class="">solve</code> <code class="">/sɑːlv/</code> means <strong>to find an answer to a problem</strong>.</li><li><code class="">resolve</code> <code class="">/rɪˈzɑːlv/</code> means <strong>to solve or end a problem or difficulty</strong>.</li></ul><h2 id="more-details" tabindex="-1">More details</h2><blockquote><p>When you solve something, you find (and presumably implement) a solution to it. This means that you have dealt with it successfully, finding what was quite possibly the only way (or at most one of a few ways) to succeed.</p></blockquote><p>Example: <code class="">The question has been solved; the correct answer is posted for all to see.</code></p><blockquote><p>When you resolve something (a problem, an issue, a question), you deal with it conclusively. You have finished it, it is done, there is nothing left to concern yourself about. This is not to say, however, that your handling of the matter was ideal, nor even necessarily satisfactory; there are many possible ways that the thing could have been dealt with, you picked one and saw it through.</p></blockquote><p>Example: <code class="">The issue has been resolved, although none of us is happy with the final outcome.</code></p><h2 id="references" tabindex="-1">References</h2><ul><li><a href="https://dictionary.cambridge.org/dictionary/english/solve" class="external-link" target="_blank" rel="noreferrer noopener">https://dictionary.cambridge.org/dictionary/english/solve</a></li><li><a href="https://dictionary.cambridge.org/dictionary/english/resolve" class="external-link" target="_blank" rel="noreferrer noopener">https://dictionary.cambridge.org/dictionary/english/resolve</a></li><li><a href="https://english.stackexchange.com/questions/14323/whats-the-difference-between-resolve-and-solve/14325#14325" class="external-link" target="_blank" rel="noreferrer noopener">https://english.stackexchange.com/questions/14323/whats-the-difference-between-resolve-and-solve/14325#14325</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Monolithic vs. Microservices Architecture]]></title>
            <link>https://ansidev.xyz/posts/2022-05-05-monolithic-vs-microservices-architecture</link>
            <guid>https://ansidev.xyz/posts/2022-05-05-monolithic-vs-microservices-architecture</guid>
            <pubDate>Thu, 05 May 2022 02:42:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="monolithic-architecture" tabindex="-1">Monolithic architecture</h2><h3 id="what-is-monolithic-architecture%3F" tabindex="-1">What is monolithic architecture?</h3><blockquote><p>A monolithic architecture is the traditional unified model for the design of a software application.</p><p>Monolithic application is designed to be self-contained and components of the application are interconnected and interdependent.</p><p>Each component and its associated components must be present in order for code to be executed or compiled successfully.</p><p>The monolithic application is packaged and deployed as a single unit.</p></blockquote><h3 id="benefits-of-monolithic-architecture" tabindex="-1">Benefits of Monolithic Architecture</h3><ul><li>Simple to develop.</li><li>Simple to debug and test.<ul><li>For example you can implement end-to-end testing by simply launching the application and testing the UI with Selenium.</li></ul></li><li>Simple to deploy.<ul><li>You just have to copy the packaged application to the server.</li></ul></li><li>Simple to scale horizontally by running multiple copies behind a load balancer.</li></ul><h3 id="drawbacks-of-monolithic-architecture" tabindex="-1">Drawbacks of Monolithic Architecture</h3><ul><li>The size of the application keeps increasing as the codebase grows and changes.</li><li>The size of the application can slow down the start-up time.</li><li>Hard to understand and make changes fast and correctly as the code becomes complicated.</li><li>It takes a lot of time to re-test, re-build and re-deploy the entire application on each update if the size of the application is large.</li><li>Hard to scale</li></ul><h2 id="microservices-architecture" tabindex="-1">Microservices architecture</h2><h3 id="what-is-microservices-architecture%3F" tabindex="-1">What is microservices architecture?</h3><blockquote><p>Microservices architecture (often shortened to microservices) refers to an architectural style for developing applications. Microservices allow a large application to be separated into smaller independent parts, with each part having its own domain of responsibility. To serve a single user request, a microservices-based application can call on many internal microservices to compose its response.</p></blockquote><h3 id="benefits-of-microservices-architecture" tabindex="-1">Benefits of Microservices Architecture</h3><ul><li><strong>Independent components</strong> - Firstly, all the services can be deployed and updated independently, which gives more flexibility. Secondly, a bug in one microservice has an impact only on a particular service and does not influence the entire application. Also, it is much easier to add new features to a microservice application than a monolithic one.</li><li><strong>Easier understanding</strong> - Split up into smaller and simpler components, a microservice application is easier to understand and manage. You just concentrate on a specific service that is related to a business goal you have.</li><li><strong>Better scalability</strong> - Another advantage of the microservices approach is that each element can be scaled independently. So the entire process is more cost- and time-effective than with monoliths when the whole application has to be scaled even if there is no need in it. In addition, every monolith has limits in terms of scalability, so the more users you acquire, the more problems you have with your monolith. Therefore, many companies, end up rebuilding their monolithic architectures.</li><li><strong>Flexibility in choosing the technology</strong> - The engineering teams are not limited by the technology chosen from the start. They are free to apply various technologies and frameworks for each microservice.</li><li><strong>The higher level of agility</strong> - Any fault in a microservices application affects only a particular service and not the whole solution. So all the changes and experiments are implemented with lower risks and fewer errors.</li></ul><h3 id="drawbacks-of-microservices-architecture" tabindex="-1">Drawbacks of Microservices Architecture</h3><ul><li><strong>Extra complexity</strong> - Since a microservices architecture is a distributed system, you have to choose and set up the connections between all the modules and databases. Also, as long as such an application includes independent services, all of them have to be deployed independently.</li><li><strong>Dealing with transactions is a challenge</strong> - Microservices has the partitioned database architecture. Business transactions that update multiple business entities in a microservices-based application need to update multiple databases owned by different services. Using distributed transactions is usually not an option and you end up having to use an eventual consistency based approach, which is more challenging for developers.</li><li><strong>Hard to test</strong> - Testing a microservices application is also much more complex then in case of monolithic web application. For a similar test for a service you would need to launch that service and any services that it depends upon (or at least configure stubs for those services).</li><li>It is more difficult to implement changes that span multiple services. In a monolithic application you could simply change the corresponding modules, integrate the changes, and deploy them in one go. In a Microservice architecture you need to carefully plan and coordinate the rollout of changes to each of the services.</li><li>Deploying a microservices-based application is also more complex. A monolithic application is simply deployed on a set of identical servers behind a load balancer. In contrast, a microservice application typically consists of a large number of services. Each service will have multiple runtime instances. And each instance need to be configured, deployed, scaled, and monitored. In addition, you will also need to implement a service discovery mechanism. Manual approaches to operations cannot scale to this level of complexity and successful deployment a microservices application requires a high level of automation.</li></ul><h2 id="reference-links" tabindex="-1">Reference links</h2><ul><li><a href="https://articles.microservices.com/monolithic-vs-microservices-architecture-5c4848858f59" class="external-link" target="_blank" rel="noreferrer noopener">https://articles.microservices.com/monolithic-vs-microservices-architecture-5c4848858f59</a></li><li><a href="https://cloud.google.com/learn/what-are-containers" class="external-link" target="_blank" rel="noreferrer noopener">https://cloud.google.com/learn/what-are-containers</a></li><li><a href="https://www.ibm.com/cloud/learn/containers" class="external-link" target="_blank" rel="noreferrer noopener">https://www.ibm.com/cloud/learn/containers</a></li><li><a href="https://opensource.com/resources/virtualization" class="external-link" target="_blank" rel="noreferrer noopener">https://opensource.com/resources/virtualization</a></li><li><a href="https://www.vmware.com/topics/glossary/content/virtual-machine.html" class="external-link" target="_blank" rel="noreferrer noopener">https://www.vmware.com/topics/glossary/content/virtual-machine.html</a></li><li><a href="https://azure.microsoft.com/en-us/overview/what-is-a-virtual-machine" class="external-link" target="_blank" rel="noreferrer noopener">https://azure.microsoft.com/en-us/overview/what-is-a-virtual-machine</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VM vs. Container]]></title>
            <link>https://ansidev.xyz/posts/2022-05-03-vm-vs-container</link>
            <guid>https://ansidev.xyz/posts/2022-05-03-vm-vs-container</guid>
            <pubDate>Mon, 02 May 2022 21:46:47 GMT</pubDate>
            <description><![CDATA[
My notes about virtualization, hypervisor, virtual machine and container.

<!-- more -->

## Virtualization

### What is virtualization?

> Virtualization is the process of running a virtual instance of a computer system in a layer abstracted from the actual hardware.

### Types of virtualization

All the components of a traditional data center or IT infrastructure can be virtualized today, with various specific types of virtualization:

1. Hardware virtualization

   When virtualizing hardware, virtual versions of computers and operating systems (VMs) are created and consolidated into a single, primary, physical server. A hypervisor communicates directly with a physical server's disk space and CPU to manage the VMs. Hardware virtualization, which is also known as server virtualization, allows hardware resources to be utilized more efficiently and for one machine to simultaneously run different operating systems.

2. Software virtualization

   Software virtualization creates a computer system complete with hardware that allows one or more guest operating systems to run on a physical host machine. For example, Android OS can run on a host machine that is natively using a Microsoft Windows OS, utilizing the same hardware as the host machine does. Additionally, applications can be virtualized and delivered from a server to an end user's device, such as a laptop or smartphone. This allows employees to access centrally hosted applications when working remotely.

3. Storage virtualization

   Storage can be virtualized by consolidating multiple physical storage devices to appear as a single storage device. Benefits include increased performance and speed, load balancing and reduced costs. Storage virtualization also helps with disaster recovery planning, as virtual storage data can be duplicated and quickly transferred to another location, reducing downtime.

4. Network virtualization

   Multiple sub-networks can be created on the same physical network by combining equipment into a single, software-based virtual network resource. Network virtualization also divides available bandwidth into multiple, independent channels, each of which can be assigned to servers and devices in real time. Advantages include increased reliability, network speed, security and better monitoring of data usage. Network virtualization can be a good choice for companies with a high volume of users who need access at all times.

5. Desktop virtualization

   This common type of virtualization separates the desktop environment from the physical device and stores a desktop on a remote server, allowing users to access their desktops from anywhere on any device. In addition to easy accessibility, benefits of virtual desktops include better data security, cost savings on software licenses and updates, and ease of management.

## Hypervisor

### What is hypervisor?

> A hypervisor is a program for enabling the virtualization.

### Types of hypervisor

1. A type 1 hypervisor is on **bare metal**. VM resources are scheduled directly to the hardware by the hypervisor. KVM is an example of a type 1 hypervisor. KVM was merged into the Linux® kernel in 2007, so if you are using a modern version of Linux, you already have access to KVM.
2. A type 2 hypervisor is **hosted**. VM resources are scheduled against a host operating system, which is then executed against the hardware. VMware Workstation and Oracle VirtualBox are examples of type 2 hypervisors.

## What are binaries, libraries, and kernels?

Binaries

> In general, binaries are non-text files made up of ones and zeros that tell a processor how to execute a program.

Libraries

> Libraries are sets of prewritten code that a program can use to do either common or specialized things. They allow developers to avoid rewriting the same code over and over.

Kernels

> Kernels are the ringleaders of the OS. They're the core programming at the center that controls all other parts of the operating system.

## Virtual machine

### What is virtual machine?

> A virtual machine is the emulated equivalent of a computer system that runs on top of another system.

```
    |-> |]]></description>
            <content:encoded><![CDATA[<h2 id="virtualization" tabindex="-1">Virtualization</h2><h3 id="what-is-virtualization%3F" tabindex="-1">What is virtualization?</h3><blockquote><p>Virtualization is the process of running a virtual instance of a computer system in a layer abstracted from the actual hardware.</p></blockquote><h3 id="types-of-virtualization" tabindex="-1">Types of virtualization</h3><p>All the components of a traditional data center or IT infrastructure can be virtualized today, with various specific types of virtualization:</p><ol><li><p>Hardware virtualization</p><p>When virtualizing hardware, virtual versions of computers and operating systems (VMs) are created and consolidated into a single, primary, physical server. A hypervisor communicates directly with a physical server’s disk space and CPU to manage the VMs. Hardware virtualization, which is also known as server virtualization, allows hardware resources to be utilized more efficiently and for one machine to simultaneously run different operating systems.</p></li><li><p>Software virtualization</p><p>Software virtualization creates a computer system complete with hardware that allows one or more guest operating systems to run on a physical host machine. For example, Android OS can run on a host machine that is natively using a Microsoft Windows OS, utilizing the same hardware as the host machine does. Additionally, applications can be virtualized and delivered from a server to an end user’s device, such as a laptop or smartphone. This allows employees to access centrally hosted applications when working remotely.</p></li><li><p>Storage virtualization</p><p>Storage can be virtualized by consolidating multiple physical storage devices to appear as a single storage device. Benefits include increased performance and speed, load balancing and reduced costs. Storage virtualization also helps with disaster recovery planning, as virtual storage data can be duplicated and quickly transferred to another location, reducing downtime.</p></li><li><p>Network virtualization</p><p>Multiple sub-networks can be created on the same physical network by combining equipment into a single, software-based virtual network resource. Network virtualization also divides available bandwidth into multiple, independent channels, each of which can be assigned to servers and devices in real time. Advantages include increased reliability, network speed, security and better monitoring of data usage. Network virtualization can be a good choice for companies with a high volume of users who need access at all times.</p></li><li><p>Desktop virtualization</p><p>This common type of virtualization separates the desktop environment from the physical device and stores a desktop on a remote server, allowing users to access their desktops from anywhere on any device. In addition to easy accessibility, benefits of virtual desktops include better data security, cost savings on software licenses and updates, and ease of management.</p></li></ol><h2 id="hypervisor" tabindex="-1">Hypervisor</h2><h3 id="what-is-hypervisor%3F" tabindex="-1">What is hypervisor?</h3><blockquote><p>A hypervisor is a program for enabling the virtualization.</p></blockquote><h3 id="types-of-hypervisor" tabindex="-1">Types of hypervisor</h3><ol><li>A type 1 hypervisor is on <strong>bare metal</strong>. VM resources are scheduled directly to the hardware by the hypervisor. KVM is an example of a type 1 hypervisor. KVM was merged into the Linux® kernel in 2007, so if you are using a modern version of Linux, you already have access to KVM.</li><li>A type 2 hypervisor is <strong>hosted</strong>. VM resources are scheduled against a host operating system, which is then executed against the hardware. VMware Workstation and Oracle VirtualBox are examples of type 2 hypervisors.</li></ol><h2 id="what-are-binaries%2C-libraries%2C-and-kernels%3F" tabindex="-1">What are binaries, libraries, and kernels?</h2><p>Binaries</p><blockquote><p>In general, binaries are non-text files made up of ones and zeros that tell a processor how to execute a program.</p></blockquote><p>Libraries</p><blockquote><p>Libraries are sets of prewritten code that a program can use to do either common or specialized things. They allow developers to avoid rewriting the same code over and over.</p></blockquote><p>Kernels</p><blockquote><p>Kernels are the ringleaders of the OS. They’re the core programming at the center that controls all other parts of the operating system.</p></blockquote><h2 id="virtual-machine" tabindex="-1">Virtual machine</h2><h3 id="what-is-virtual-machine%3F" tabindex="-1">What is virtual machine?</h3><blockquote><p>A virtual machine is the emulated equivalent of a computer system that runs on top of another system.</p></blockquote><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">    |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">    |   |   App 1    |   App 2   |   App 3   |</span></span>
<span class="line"><span style="color:#b392f0">    |   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">VM -|   | Bins/Libs  | Bins/Libs | Bins/Libs |</span></span>
<span class="line"><span style="color:#b392f0">    |   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">    |   | Windows OS | Linux OS  | macOS     |</span></span>
<span class="line"><span style="color:#b392f0">    |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">        |              Hypervisor            |</span></span>
<span class="line"><span style="color:#b392f0">        |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0">        |               Host OS              |</span></span>
<span class="line"><span style="color:#b392f0">        |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0">        |                Server              |</span></span>
<span class="line"><span style="color:#b392f0">        |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">    |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">    |   |   App 1    |   App 2   |   App 3   |</span></span>
<span class="line"><span style="color:#24292eff">    |   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">VM -|   | Bins/Libs  | Bins/Libs | Bins/Libs |</span></span>
<span class="line"><span style="color:#24292eff">    |   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">    |   | Windows OS | Linux OS  | macOS     |</span></span>
<span class="line"><span style="color:#24292eff">    |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">        |              Hypervisor            |</span></span>
<span class="line"><span style="color:#24292eff">        |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff">        |               Host OS              |</span></span>
<span class="line"><span style="color:#24292eff">        |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff">        |                Server              |</span></span>
<span class="line"><span style="color:#24292eff">        |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><h3 id="types-of-virtual-machines" tabindex="-1">Types of virtual machines</h3><blockquote><p>A <strong>process virtual machine</strong> allows a single process to run as an application on a host machine, providing a platform-independent programming environment by masking the information of the underlying hardware or operating system. An example of a process VM is the Java Virtual Machine, which enables any operating system to run Java applications as if they were native to that system.</p></blockquote><blockquote><p>A <strong>system virtual machine</strong> is fully virtualized to substitute for a physical machine. A system platform supports the sharing of a host computer’s physical resources between multiple virtual machines, each running its own copy of the operating system. This virtualization process relies on a hypervisor, which can run on bare hardware, such as VMware ESXi, or on top of an operating system.</p></blockquote><h3 id="what-are-the-benefits-of-virtual-machines%3F" tabindex="-1">What are the benefits of virtual machines?</h3><p><strong>Cost savings</strong> - running multiple virtual environments from one piece of infrastructure means that you can drastically reduce your physical infrastructure footprint. This boosts your bottom line - decreasing the need to maintain nearly as many servers and saving on maintenance costs and electricity.</p><p><strong>Agility and speed</strong> - Spinning up a VM is relatively easy and quick and is much simpler than provisioning an entire new environment for your developers. Virtualization makes the process of running dev-test scenarios a lot quicker.</p><p><strong>Lowered downtime</strong> - VMs are so portable and easy to move from one hypervisor to another on a different machine - this means that they are a great solution for backup, in the event the host goes down unexpectedly.</p><p><strong>Scalability</strong> - VMs allow you to more easily scale your apps by adding more physical or virtual servers to distribute the workload across multiple VMs. As a result you can increase the availability and performance of your apps.</p><p><strong>Security benefits</strong> - Because virtual machines run in multiple operating systems, using a guest operating system on a VM allows you to run apps of questionable security and protects your host operating system. VMs also allow for better security forensics, and are often used to safely study computer viruses, isolating the viruses to avoid risking their host computer.</p><h3 id="use-cases-for-virtual-machines" tabindex="-1">Use cases for virtual machines</h3><p>Here are a few ways virtual machines are used:</p><ul><li>Building and deploying apps to the cloud.</li><li>Trying out a new operating system (OS), including beta releases.</li><li>Spinning up a new environment to make it simpler and quicker for developers to run dev-test scenarios.</li><li>Backing up your existing OS.</li><li>Accessing virus-infected data or running an old application by installing an older OS.</li><li>Running software or apps on operating systems that they weren’t originally intended for.</li></ul><h2 id="container" tabindex="-1">Container</h2><h3 id="what-are-containers%3F" tabindex="-1">What are containers?</h3><blockquote><p>Containers are lightweight packages of your application code together with dependencies such as specific versions of programming language runtimes and libraries required to run your software services.</p></blockquote><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">           |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">           |   |   App 1    |   App 2   |   App 3   |</span></span>
<span class="line"><span style="color:#b392f0">Container -|   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">           |   | Bins/Libs  | Bins/Libs | Bins/Libs |</span></span>
<span class="line"><span style="color:#b392f0">           |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#b392f0">               |         Container software         |</span></span>
<span class="line"><span style="color:#b392f0">               |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0">               |               Host OS              |</span></span>
<span class="line"><span style="color:#b392f0">               |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0">               |                Server              |</span></span>
<span class="line"><span style="color:#b392f0">               |------------------------------------|</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">           |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">           |   |   App 1    |   App 2   |   App 3   |</span></span>
<span class="line"><span style="color:#24292eff">Container -|   |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">           |   | Bins/Libs  | Bins/Libs | Bins/Libs |</span></span>
<span class="line"><span style="color:#24292eff">           |-&gt; |------------|-----------|-----------|</span></span>
<span class="line"><span style="color:#24292eff">               |         Container software         |</span></span>
<span class="line"><span style="color:#24292eff">               |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff">               |               Host OS              |</span></span>
<span class="line"><span style="color:#24292eff">               |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff">               |                Server              |</span></span>
<span class="line"><span style="color:#24292eff">               |------------------------------------|</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre><h3 id="what-are-the-benefits-of-containers%3F" tabindex="-1">What are the benefits of containers?</h3><p><strong>Lightweight</strong> - Containers share the machine OS kernel, eliminating the need for a full OS instance per application and making container files small and easy on resources. Their smaller size, especially compared to virtual machines, means they can spin up quickly and better support cloud-native applications that scale horizontally.</p><p><strong>Portable and platform independent</strong> - Containers carry all their dependencies with them, meaning that software can be written once and then run without needing to be re-configured across laptops, cloud, and on-premises computing environments.</p><p><strong>Supports modern development and architecture</strong> - Due to a combination of their deployment portability/consistency across platforms and their small size, containers are an ideal fit for modern development and application patterns - such as DevOps, serverless, and microservices - that are built are regular code deployments in small increments.</p><p><strong>Improves utilization</strong> - Like VMs before them, containers enable developers and operators to improve CPU and memory utilization of physical machines. Where containers go even further is that because they also enable microservice architectures, application components can be deployed and scaled more granularly, an attractive alternative to having to scale up an entire monolithic application because a single component is struggling with load.</p><h3 id="use-cases-for-containers" tabindex="-1">Use cases for containers</h3><p><strong>Microservices</strong> - Containers are small and lightweight, which makes them a good match for microservice architectures where applications are constructed of many, loosely coupled and independently deployable smaller services.</p><p><strong>DevOps</strong> - The combination of microservices as an architecture and containers as a platform is a common foundation for many teams that embrace DevOps as the way they build, ship and run software.</p><p><strong>Hybrid, multi-cloud</strong> - Because containers can run consistently anywhere, across laptop, on-premises and cloud environments, they are an ideal underlying architecture for hybrid cloud and multicloud scenarios where organizations find themselves operating across a mix of multiple public clouds in combination with their own data center.</p><p><strong>Application modernizing and migration</strong> - One of the most common approaches to application modernization starts by containerizing them so that they can be migrated to the cloud.</p><h2 id="vms-vs.-containers" tabindex="-1">VMs vs. Containers</h2><table><thead><tr><th>VMs</th><th>Containers</th></tr></thead><tbody><tr><td>Heavyweight.</td><td>Lightweight.</td></tr><tr><td>Limited performance.</td><td>Native performance.</td></tr><tr><td>Each VM runs in its own OS.</td><td>All containers share the host OS.</td></tr><tr><td>Hardware-level virtualization.</td><td>OS virtualization.</td></tr><tr><td>Startup time in minutes.</td><td>Startup time in milliseconds.</td></tr><tr><td>Allocates required memory.</td><td>Requires less memory space.</td></tr><tr><td>Fully isolated and hence more secure.</td><td>Process-level isolation, possibly less secure.</td></tr></tbody></table><h2 id="reference-links" tabindex="-1">Reference links</h2><ul><li><a href="https://www.backblaze.com/blog/vm-vs-containers" class="external-link" target="_blank" rel="noreferrer noopener">https://www.backblaze.com/blog/vm-vs-containers</a></li><li><a href="https://cloud.google.com/learn/what-are-containers" class="external-link" target="_blank" rel="noreferrer noopener">https://cloud.google.com/learn/what-are-containers</a></li><li><a href="https://www.ibm.com/cloud/learn/containers" class="external-link" target="_blank" rel="noreferrer noopener">https://www.ibm.com/cloud/learn/containers</a></li><li><a href="https://opensource.com/resources/virtualization" class="external-link" target="_blank" rel="noreferrer noopener">https://opensource.com/resources/virtualization</a></li><li><a href="https://www.vmware.com/topics/glossary/content/virtual-machine.html" class="external-link" target="_blank" rel="noreferrer noopener">https://www.vmware.com/topics/glossary/content/virtual-machine.html</a></li><li><a href="https://azure.microsoft.com/en-us/overview/what-is-a-virtual-machine" class="external-link" target="_blank" rel="noreferrer noopener">https://azure.microsoft.com/en-us/overview/what-is-a-virtual-machine</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Gartner 7R]]></title>
            <link>https://ansidev.xyz/posts/2022-04-21-gartner-seven-r</link>
            <guid>https://ansidev.xyz/posts/2022-04-21-gartner-seven-r</guid>
            <pubDate>Thu, 21 Apr 2022 11:38:34 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="gartner-7r" tabindex="-1">Gartner 7R</h2><p>This is 7 steps you should practice if you want to modernize your legacy application, recommended by Gartner.</p><ol><li><p>Retain</p><p>Also known as “encapsulating,” is used when it is best to leave the application running “as-is” rather than modernizing it. It usually applies to legacy applications with constraints preventing their migration to a cloud. A common practice is to encapsulate the retained system behind an API so that other systems can easily consume its capabilities as they are modernized and migrated to a cloud.</p></li><li><p>Rehost</p><p>Also known as “lift-and-shift,” rehosting means migrating applications “as is.” It redeploys an application to cloud infrastructure without recompiling, altering its code, or modifying its features and functions.</p><p>This “no-code” approach is an effective way to get to the cloud quickly with minimal effort and cost. Its use cases range from healthy applications that are essentially cloud-ready to large legacy systems that are not worth modernizing. Rehosting is a practical approach that can help build your teams’ cloud skills and confidence.</p></li><li><p>Replatform</p><p>Also known as “lift and reshape,” replatforming is a relatively low-touch cloud migration approach that upgrades the application to a new runtime platform (i.e., operating system, middleware, shift to managed service database). Application code changes are limited to what is necessary to adapt to the new platform. It neither alters code structure nor the functions the application provides.</p></li><li><p>Refactor</p><p>Refactoring involves optimizing existing code while retaining its external behavior. This strategy improves the design of existing code to better integrate with available cloud technologies and remove technical debt. However, as this approach requires significant non-functional code changes, they will add time, cost, and complexity to the migration effort.</p></li><li><p>Rearchitect</p><p>Rearchitecting, also known as re-engineering, materially alters the application code. It is a significant body of work requiring time, money, and skilled and knowledgeable people. This approach allows to shift code to the new application architecture and fully exploit platform and cloud capabilities. As a result, it gives better scalability and performance due to overarching changes in applications.</p></li><li><p>Rebuild</p><p>Rebuilding an application is rewriting it from scratch. This approach involves recreating the application using new technology to implement the existing application’s functionality as defined by the original specification.</p><p>Before moving forward with a Rebuild approach, you should take some time to analyze Replace options.</p></li><li><p>Replace</p><p>Also known as “drop and shop,” replacing entails eliminating the former application and sourcing an entirely new product as a solution. The Rebuild and Replace approaches share the same drivers and both result in creating a new way to deliver the required functionality. As opposed to rebuilding, replacing decreases the number of migration activities. Data migration is often simplified with a replacing approach, as many systems provide a dedicated import feature.</p></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What is .PHONY in makefile?]]></title>
            <link>https://ansidev.xyz/posts/2022-04-06-what-is-dot-phony-in-makefile</link>
            <guid>https://ansidev.xyz/posts/2022-04-06-what-is-dot-phony-in-makefile</guid>
            <pubDate>Wed, 06 Apr 2022 14:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="what-is-.phony-in-makefile%3F" tabindex="-1">What is <code class="">.PHONY</code> in makefile?</h2><blockquote><p>A phony target is one that is not really the name of a file; rather it is just a name for a recipe to be executed when you make an explicit request.</p></blockquote><h2 id="why-.phony%3F" tabindex="-1">Why <code class="">.PHONY</code>?</h2><p>There are two benefits of using a phony target:</p><ol><li>Avoid a conflict with a file of the same name.</li></ol><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">clean:</span></span>
<span class="line"><span style="color:#b392f0">    rm </span><span style="color:#9db1c5">*.o</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">temp</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">clean:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">rm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">*.o</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">temp</span></span>
<span class="line"></span></code></pre></div></code></pre><p>In this example, the clean target will not work properly if a file named clean is ever created in this directory. Since it has no prerequisites, clean would always be considered up to date and its recipe would not be executed. To avoid this problem you can explicitly declare the target to be phony by making it a prerequisite of the <a href="https://www.gnu.org/software/make/manual/html_node/Special-Targets.html#Special-Targets" class="external-link" target="_blank" rel="noreferrer noopener">special target</a> <code class="">.PHONY</code> as follows:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">.PHONY: </span><span style="color:#9db1c5">clean</span></span>
<span class="line"><span style="color:#b392f0">clean:</span></span>
<span class="line"><span style="color:#b392f0">    rm </span><span style="color:#9db1c5">*.o</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">temp</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">.PHONY:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">clean</span></span>
<span class="line"><span style="color:#6f42c1">clean:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">rm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">*.o</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">temp</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Once this is done, <code class="">make clean</code> will run the recipe regardless of whether there is a file named <code class="">clean</code>.</p><ol start="2"><li>Improve performance.</li></ol><p>2.1 Recursive use of <code class="">make</code></p><p>Suppose you have a sub-directory subdir which has its own makefile, and you would like the containing directory’s makefile to run make on the sub-directory.</p><p>The solution are:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">subsystem:</span></span>
<span class="line"><span style="color:#b392f0">    cd </span><span style="color:#9db1c5">subdir</span><span style="color:#b392f0"> </span><span style="color:#bbb">&amp;&amp;</span><span style="color:#b392f0"> $(MAKE)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">subsystem:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">cd</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">subdir</span><span style="color:#24292EFF"> </span><span style="color:#212121">&amp;&amp;</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">$(MAKE</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>or</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">subsystem:</span></span>
<span class="line"><span style="color:#b392f0">    $(MAKE) -C subdir</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">subsystem:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">$(MAKE</span><span style="color:#24292EFF">) -C subdir</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>What is the right solution if we have many subsystems that need to be built?</strong></p><p>You might think of the below solution:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">SUBDIRS </span><span style="color:#9db1c5">=</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">foo</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">bar</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">baz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">subdirs:</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f97583">for</span><span style="color:#b392f0"> dir </span><span style="color:#f97583">in</span><span style="color:#b392f0"> </span><span style="color:#ffab70">$(</span><span style="color:#b392f0">SUBDIRS</span><span style="color:#ffab70">)</span><span style="color:#b392f0">; </span><span style="color:#f97583">do</span><span style="color:#b392f0"> \</span></span>
<span class="line"><span style="color:#b392f0">        $(MAKE) -C $dir; \</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#f97583">done</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">SUBDIRS</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">=</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">foo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">bar</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">baz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">subdirs:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">for</span><span style="color:#24292EFF"> dir </span><span style="color:#d32f2f">in</span><span style="color:#24292EFF"> </span><span style="color:#22863a">$(</span><span style="color:#6f42c1">SUBDIRS</span><span style="color:#22863a">)</span><span style="color:#24292EFF">; </span><span style="color:#d32f2f">do</span><span style="color:#24292EFF"> \</span></span>
<span class="line"><span style="color:#24292EFF">        </span><span style="color:#6f42c1">$(MAKE</span><span style="color:#24292EFF">) -C $dir; \</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#d32f2f">done</span></span>
<span class="line"></span></code></pre></div></code></pre><p>There are problems with this method, however. First, any error detected in a sub-make is ignored by this rule, so it will continue to build the rest of the directories even when one fails. This can be overcome by adding shell commands to note the error and exit, but then it will do so even if make is invoked with the <code class="">-k</code> option, which is unfortunate. Second, and perhaps more importantly, you cannot take advantage of make’s ability to build targets in <a href="https://www.gnu.org/software/make/manual/html_node/Parallel.html#Parallel" class="external-link" target="_blank" rel="noreferrer noopener">parallel</a>, since there is only one rule.</p><p>By declaring the sub-directories as <code class="">.PHONY</code> targets (you must do this as the sub-directory obviously always exists; otherwise it won’t be built) you can remove these problems:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">SUBDIRS </span><span style="color:#9db1c5">=</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">foo</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">bar</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">baz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">.PHONY: </span><span style="color:#9db1c5">subdirs</span><span style="color:#b392f0"> </span><span style="color:#ffab70">$(</span><span style="color:#b392f0">SUBDIRS</span><span style="color:#ffab70">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">subdirs: </span><span style="color:#ffab70">$(</span><span style="color:#b392f0">SUBDIRS</span><span style="color:#ffab70">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ffab70">$(</span><span style="color:#b392f0">SUBDIRS</span><span style="color:#ffab70">)</span><span style="color:#b392f0">:</span></span>
<span class="line"><span style="color:#b392f0">    $(MAKE) -C $@</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">foo: </span><span style="color:#9db1c5">baz</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">SUBDIRS</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">=</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">foo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">bar</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">baz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">.PHONY:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">subdirs</span><span style="color:#24292EFF"> </span><span style="color:#22863a">$(</span><span style="color:#6f42c1">SUBDIRS</span><span style="color:#22863a">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">subdirs:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">$(</span><span style="color:#6f42c1">SUBDIRS</span><span style="color:#22863a">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863a">$(</span><span style="color:#6f42c1">SUBDIRS</span><span style="color:#22863a">)</span><span style="color:#24292EFF">:</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">$(MAKE</span><span style="color:#24292EFF">) -C $@</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">foo:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">baz</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Here we have also declared that the <code class="">foo</code> sub-directory cannot be built until after the <code class="">baz</code> sub-directory is complete; this kind of relationship declaration is particularly important when attempting parallel builds.</p><p>The <a href="https://www.gnu.org/software/make/manual/html_node/Implicit-Rules.html#Implicit-Rules" class="external-link" target="_blank" rel="noreferrer noopener">implicit rule</a> search is skipped for <code class="">.PHONY</code> targets. This is why declaring a target as <code class="">.PHONY</code> is good for performance, even if you are not worried about the actual file existing.</p><p>2.2 Phony target prerequisites</p><p>A phony target should not be a prerequisite of a real target file; if it is, its recipe will be run every time make goes to update that file. As long as a phony target is never a prerequisite of a real target, the phony target recipe will be executed only when the phony target is a <a href="https://www.gnu.org/software/make/manual/html_node/Goals.html#Goals" class="external-link" target="_blank" rel="noreferrer noopener">specified goal</a>.</p><p>Phony targets can have prerequisites. When one directory contains multiple programs, it is most convenient to describe all of the programs in one makefile ./Makefile. Since the target remade by default will be the first one in the makefile, it is common to make this a phony target named <code class="">all</code> and give it, as prerequisites, all the individual programs. For example:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">all: </span><span style="color:#9db1c5">app1</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">app2</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">app3</span></span>
<span class="line"><span style="color:#b392f0">.PHONY: </span><span style="color:#9db1c5">all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">app1: </span><span style="color:#9db1c5">app1.go</span></span>
<span class="line"><span style="color:#b392f0">    go </span><span style="color:#9db1c5">build</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-o</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">dist/app1</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">app1.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">app2: </span><span style="color:#9db1c5">app2.go</span></span>
<span class="line"><span style="color:#b392f0">    go </span><span style="color:#9db1c5">build</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-o</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">dist/app2</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">app2.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">app3: </span><span style="color:#9db1c5">app3.go</span></span>
<span class="line"><span style="color:#b392f0">    go </span><span style="color:#9db1c5">build</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-o</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">dist/app3</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">app3.go</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">all:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app1</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app2</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app3</span></span>
<span class="line"><span style="color:#6f42c1">.PHONY:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">app1:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app1.go</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">go</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">build</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-o</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">dist/app1</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app1.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">app2:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app2.go</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">go</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">build</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-o</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">dist/app2</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app2.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">app3:</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app3.go</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">go</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">build</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-o</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">dist/app3</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">app3.go</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Now you can say just <code class="">make</code> to remake all three programs, or specify as arguments the ones to remake (as in <code class="">make app1 app3</code>). Phoniness is not inherited: the prerequisites of a phony target are not themselves phony, unless explicitly declared to be so.</p><hr><p>Sources:</p><ul><li><a href="https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html" class="external-link" target="_blank" rel="noreferrer noopener">https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html</a>.</li><li><a href="https://www.gnu.org/software/make/manual/html_node/Recursion.html" class="external-link" target="_blank" rel="noreferrer noopener">https://www.gnu.org/software/make/manual/html_node/Recursion.html</a>.</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Why shell commands in makefile usually start with at symbol?]]></title>
            <link>https://ansidev.xyz/posts/2022-04-02-why-shell-commands-in-makefile-usually-start-with-at-symbol</link>
            <guid>https://ansidev.xyz/posts/2022-04-02-why-shell-commands-in-makefile-usually-start-with-at-symbol</guid>
            <pubDate>Sat, 02 Apr 2022 14:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>Answer:</p><blockquote><p>Normally make prints each command line before it is executed. We call this echoing because it gives the appearance that you are typing the commands yourself.</p><p><strong>When a line starts with <code class="">@</code>, the echoing of that line is suppressed</strong>. The <code class="">@</code> is discarded before the command is passed to the shell. Typically you would use this for a command whose only effect is to print something, such as an echo command to indicate progress through the makefile:</p></blockquote><p>Source: <a href="https://web.mit.edu/gnu/doc/html/make_5.html" class="external-link" target="_blank" rel="noreferrer noopener">https://web.mit.edu/gnu/doc/html/make_5.html</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What is good code?]]></title>
            <link>https://ansidev.xyz/posts/2022-03-16-what-is-good-code</link>
            <guid>https://ansidev.xyz/posts/2022-03-16-what-is-good-code</guid>
            <pubDate>Wed, 16 Mar 2022 08:56:00 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote><p>Good code is written so that is readable, understandable, covered by automated tests, not over complicated and does well what is intended to do.</p></blockquote><p>What do you feel makes code good?</p><ul><li>Readable</li><li>Testable/Tested</li><li>Simple</li><li>Work as expected</li><li>Maintainable</li></ul><p>Source: <a href="https://intenthq.com/blog/it-audience/what-is-good-code-a-scientific-definition/" class="external-link" target="_blank" rel="noreferrer noopener">Intent HQ</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Java collection types comparison notes]]></title>
            <link>https://ansidev.xyz/posts/2022-03-14-java-collection-types-comparison-notes</link>
            <guid>https://ansidev.xyz/posts/2022-03-14-java-collection-types-comparison-notes</guid>
            <pubDate>Mon, 14 Mar 2022 12:00:00 GMT</pubDate>
            <description><![CDATA[
My notes about Java collection types comparison.

<!-- more -->

## ArrayList vs. LinkedList

| #            | ArrayList                                                                                                                      | LinkedList                                                                                                                         |
| ]]></description>
            <content:encoded><![CDATA[<h2 id="arraylist-vs.-linkedlist" tabindex="-1">ArrayList vs. LinkedList</h2><table><thead><tr><th>#</th><th>ArrayList</th><th>LinkedList</th></tr></thead><tbody><tr><td>Behavior</td><td>Implement <strong>List</strong> interface, so it can act as a list.</td><td>Implement <strong>List</strong> and <strong>Dequeue</strong> interface, so it can act as a list and queue both.</td></tr><tr><td>Storing</td><td>Data are stored in a <strong>dynamic array</strong>.</td><td>Data are stored in a <strong>doubly-linked list</strong>.</td></tr><tr><td>Manipulation</td><td><strong>Slow</strong> because it internally uses an array. If any element is removed from the array, all the bits re shifted in the memory.</td><td><strong>Faster</strong> because it uses a doubly-linked list, so no bit shifting is required in the memory, only the reference link is changed.</td></tr><tr><td>When to use?</td><td>ArrayList is <strong>better for storing and accessing</strong> data.</td><td>LinkedList is <strong>better for manipulating</strong> data.</td></tr></tbody></table><h2 id="arraylist-vs.-vector" tabindex="-1">ArrayList vs. Vector</h2><table><thead><tr><th>#</th><th>ArrayList</th><th>Vector</th></tr></thead><tbody><tr><td>Synchronization</td><td>Non-synchronized, which means that multiple threads can operate on ArrayList at the same time.</td><td><strong>Synchronized</strong>, which means that only one thread can access the code at a time.</td></tr><tr><td>Legacy</td><td>ArrayList is <strong>not legacy</strong> class, it was introduced in JDK 1.2.</td><td>Vector is <strong>legacy</strong> class.</td></tr><tr><td>Size</td><td>ArrayList <strong>increments 50%</strong> of its current size if element added exceeds its capacity.</td><td>Vector <strong>increments 100%</strong> of its current size if element added exceeds its capacity.</td></tr><tr><td>Speed</td><td>ArrayList is <strong>fast</strong> because it is non-synchronized.</td><td>Vector is <strong>slow</strong> because it is synchronized, i.e., in a multithreading environment, it holds the other threads in runnable or non-runnable state until current thread releases the lock of the object.</td></tr><tr><td>Iteration</td><td>ArrayList uses <strong>Iterator</strong> interface to <strong>traverse</strong> through elements.</td><td>Vector can use both <strong>Iterator or Enumerator</strong> interface to <strong>traverse</strong> through elements.</td></tr><tr><td>When to use?</td><td>ArrayList is use mostly in <strong>single-thread applications</strong>.</td><td><strong>Collections.synchronizedList()</strong> is preferred to Vector nowadays.</td></tr></tbody></table><h2 id="list-vs.-set" tabindex="-1">List vs. Set</h2><table><thead><tr><th>#</th><th>List</th><th>Set</th></tr></thead><tbody><tr><td>Order</td><td>Order sequence</td><td>Unorder sequence</td></tr><tr><td>Duplication</td><td>Allowed</td><td>Disallowed</td></tr><tr><td>Null element</td><td>It is possible to store several null elements.</td><td>A null element can only be stored once.</td></tr><tr><td>Accessing</td><td>Elements can be accessed based on their position.</td><td>Access to items from a certain position is not permitted.</td></tr><tr><td>When to use?</td><td>Use it when you want to frequently access the elements by using the index.</td><td>Set is used when you want to design a collection of distinct elements.</td></tr></tbody></table><h2 id="set-vs.-map" tabindex="-1">Set vs. Map</h2><table><thead><tr><th>#</th><th>Set</th><th>Map</th></tr></thead><tbody><tr><td>Duplication</td><td>Duplicate values are not permitted</td><td>Unique key, but repeatable values</td></tr><tr><td>Traversing</td><td>Use Using the keyset() and entryset() methods</td><td>Not possible, you must convert Map to Set</td></tr><tr><td>Insertion Order</td><td>Both Set and Map don’t keep the insertion order, however, some of Set’s classes, such as LinkedHashSet, keep the insertion order.</td><td></td></tr></tbody></table><h2 id="hashmap-vs.-treemap" tabindex="-1">HashMap vs. TreeMap</h2><table><thead><tr><th>#</th><th>HashMap</th><th>TreeMap</th></tr></thead><tbody><tr><td>Implementation</td><td>The Java HashMap implementation of the Map interface is based on <strong>hash tables</strong>.</td><td>Java TreeMap is a Map interface implementation based on a <strong>Red-Black Tree structure</strong>, which is a self balancing binary search tree.</td></tr><tr><td>Interface</td><td>The <strong>Map</strong>, <strong>Cloneable</strong>, and <strong>Serializable</strong> interfaces are implemented by HashMap.</td><td><strong>NavigableMap</strong>, <strong>Cloneable</strong>, and <strong>Serializable</strong> interfaces are implemented by TreeMap.</td></tr><tr><td>Null Keys/ Values</td><td>null key: <strong>allow only one null key</strong>, null value: allow multiple.</td><td>null key: <strong>not permitted</strong>, null value: allow multiple.</td></tr><tr><td>Data Types</td><td>HashMap does not perform sorting on keys, so it allows for heterogeneous elements.</td><td>TreeMap allows homogeneous values as a key because of sorting.</td></tr><tr><td>Performance</td><td>HashMap is faster than TreeMap because it provides constant time performance that is O(1) for the basic operation like get() and put()</td><td>TreeMap is slow in comparison to HaskMap because it provides the performance of O(log(n) for most operation like add(), remove(), and contains().</td></tr><tr><td>Order of elements</td><td>HashMap does not maintains any order.</td><td>TreeMap elements are sorted in natural ordering (ascending).</td></tr><tr><td>When to use?</td><td>Use HashMap when we does not require key-value pair in sorted order</td><td>Use TreeMap when we require key-value pair in ascending order.</td></tr></tbody></table>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Thi thiên 1]]></title>
            <link>https://ansidev.xyz/posts/2022-02-25-thi-thien-001</link>
            <guid>https://ansidev.xyz/posts/2022-02-25-thi-thien-001</guid>
            <pubDate>Fri, 25 Feb 2022 05:51:55 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="thi-thi%C3%AAn-1" tabindex="-1">Thi Thiên 1</h2><p><strong>So sánh người công chính và kẻ gian ác</strong></p><p><sup>1</sup> Phước cho người nào<br>&nbsp;&nbsp;&nbsp;Chẳng đi theo mưu kế của kẻ ác,<br>&nbsp;&nbsp;&nbsp;Chẳng đứng trong đường tội nhân,<br>&nbsp;&nbsp;&nbsp;Không ngồi chỗ của kẻ nhạo báng.<br></p><p><sup>2</sup> Nhưng vui thích về luật pháp của <strong>Đức Giê-hô-va</strong><br>&nbsp;&nbsp;&nbsp;Và suy ngẫm luật pháp ấy ngày và đêm.<br></p><p><sup>3</sup> Người ấy sẽ như cây trồng gần dòng nước,<br>&nbsp;&nbsp;&nbsp;Sinh bông trái đúng mùa đúng tiết,<br>&nbsp;&nbsp;&nbsp;Lá nó cũng chẳng tàn héo.<br>&nbsp;&nbsp;&nbsp;Mọi việc người làm đều sẽ thịnh vượng.<br></p><p><sup>4</sup> Kẻ ác chẳng như vậy đâu,<br>&nbsp;&nbsp;&nbsp;Nhưng chúng khác nào rơm rác gió thổi bay đi.<br></p><p><sup>5</sup> Vì thế, kẻ ác chẳng đứng nổi trong ngày phán xét,<br>&nbsp;&nbsp;&nbsp;Tội nhân cũng không được vào hội người công chính.<br></p><p><sup>6</sup> Vì <strong>Đức Giê-hô-va</strong> biết đường lối người công chính,<br>&nbsp;&nbsp;&nbsp;Nhưng đường lối kẻ ác sẽ bị diệt vong.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fix kernel_task high CPU usage on macOS]]></title>
            <link>https://ansidev.xyz/posts/2022-02-24-fix-high-cpu-usage-while-watching-you-tube-videos-on-chrome</link>
            <guid>https://ansidev.xyz/posts/2022-02-24-fix-high-cpu-usage-while-watching-you-tube-videos-on-chrome</guid>
            <pubDate>Wed, 23 Feb 2022 17:59:45 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>kernel_task takes up lots of CPU.</p><h2 id="solution" tabindex="-1">Solution</h2><p>If there was lot of dust accumulated near the side vents, may be it is the reason. You just need to clean your MacBook.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Applications don't show up in Spotlight]]></title>
            <link>https://ansidev.xyz/posts/2021-04-30-application-dont-show-up-in-spotlight</link>
            <guid>https://ansidev.xyz/posts/2021-04-30-application-dont-show-up-in-spotlight</guid>
            <pubDate>Fri, 30 Apr 2021 10:03:30 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>Applications don’t show up in Spotlight search result.</p><h2 id="solution" tabindex="-1">Solution</h2><p><strong>Turn off spotlight</strong></p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">mdutil</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-a</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-i</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">off</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">mdutil</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-a</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-i</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">off</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>Unload and reload it</strong></p><p>If your macOS System Integrity Protection (SIP) is enabled, you will see an error message looks like <code class="">Operation not permitted while System Integrity Protection is engaged</code>, so you can ignore this step.</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">launchctl</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">unload</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-w</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/System/Library/LaunchDaemons/com.apple.metadata.mds.plist</span></span>
<span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">launchctl</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">load</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-w</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/System/Library/LaunchDaemons/com.apple.metadata.mds.plist</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">launchctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">unload</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-w</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/System/Library/LaunchDaemons/com.apple.metadata.mds.plist</span></span>
<span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">launchctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">load</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-w</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/System/Library/LaunchDaemons/com.apple.metadata.mds.plist</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>Turn on spotlight again</strong></p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">mdutil</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-a</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-i</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">on</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">mdutil</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-a</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-i</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">on</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>If the problem was not solved, try these instructions:</strong></p><blockquote><ol><li>Go to System Preferences, Select Spotlight.</li><li>Select the Privacy tab.</li><li>Click the Plus (+) button.</li><li>Press <code class="">Command</code> + <code class="">Shift</code> + <code class="">C</code> to reveal your hard drives (if they are not available otherwise), or simply navigate to your hard drive (most likely MacintoshHD)</li><li>If you have more than one hard drive, hold the Command key and click your various drives to add them to your selection.</li><li>Click the <code class="">Choose</code> button to add them to the Privacy list.</li><li>Ignore the warning.</li><li>Remove the hard drive by clicking the minus sign.</li></ol></blockquote><p>Now everything should be reindexed as expected.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Move to Trash CLI on macOS]]></title>
            <link>https://ansidev.xyz/posts/2021-04-30-move-to-trash-cli-on-macos</link>
            <guid>https://ansidev.xyz/posts/2021-04-30-move-to-trash-cli-on-macos</guid>
            <pubDate>Fri, 30 Apr 2021 09:44:15 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>On Linux, you can move files/folder to Trash from CLI using command called <code class="">rm</code>. On macOS, there is also a command called <code class="">rm</code>, but this command will delete your files/folder permanently instead of move them to Trash. By default, you must do it via GUI.</p><h2 id="solution" tabindex="-1">Solution</h2><p>Install the <a href="https://brew.sh/" class="external-link" target="_blank" rel="noreferrer noopener">Homebrew</a> package <a href="https://github.com/macmade/trash" class="external-link" target="_blank" rel="noreferrer noopener">trash</a> using command:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">brew </span><span style="color:#9db1c5">install</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--HEAD</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">macmade/tap/trash</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">brew</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">install</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--HEAD</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">macmade/tap/trash</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You can alias the default rm command to trash, using the following line into your shell profile file:</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">if</span><span style="color:#b392f0"> [ </span><span style="color:#f97583">-f</span><span style="color:#b392f0"> /usr/local/bin/trash ]; </span><span style="color:#f97583">then</span><span style="color:#b392f0"> </span><span style="color:#f97583">alias</span><span style="color:#b392f0"> rm</span><span style="color:#f97583">=</span><span style="color:#ffab70">"/usr/local/bin/trash"</span><span style="color:#b392f0">; </span><span style="color:#f97583">fi</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">if</span><span style="color:#24292EFF"> [ </span><span style="color:#d32f2f">-f</span><span style="color:#24292EFF"> /usr/local/bin/trash ]; </span><span style="color:#d32f2f">then</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">alias</span><span style="color:#24292EFF"> rm</span><span style="color:#d32f2f">=</span><span style="color:#22863a">"/usr/local/bin/trash"</span><span style="color:#24292EFF">; </span><span style="color:#d32f2f">fi</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Then restart the terminal application.</p><p>Now, the command <code class="">rm</code> will move your files/folder to Trash instead of delete them permanently.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fix FontAwesome icons being huge on page load]]></title>
            <link>https://ansidev.xyz/posts/2021-07-04-fix-font-awesome-icon-being-huge-on-page-load</link>
            <guid>https://ansidev.xyz/posts/2021-07-04-fix-font-awesome-icon-being-huge-on-page-load</guid>
            <pubDate>Fri, 30 Apr 2021 09:44:15 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>If you are using FontAwesome in your project, you may face to this problem: FontAwesome icons being huge on page load</p><h2 id="solution" tabindex="-1">Solution</h2><ol><li>Turn off autoAddCss</li></ol><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">import</span><span style="color:#b392f0"> { config } </span><span style="color:#f97583">from</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'@fortawesome/fontawesome-svg-core'</span></span>
<span class="line"><span style="color:#79b8ff">config</span><span style="color:#b392f0">.autoAddCss </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">false</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">import</span><span style="color:#24292EFF"> { config } </span><span style="color:#d32f2f">from</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'@fortawesome/fontawesome-svg-core'</span></span>
<span class="line"><span style="color:#1976d2">config</span><span style="color:#24292EFF">.autoAddCss </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">false</span></span>
<span class="line"></span></code></pre></div></code></pre><ol start="2"><li>Load in CSS directly in your SCSS file:</li></ol><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">@import </span><span style="color:#ffab70">'node_modules/@fortawesome/fontawesome-svg-core/styles'</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">@import </span><span style="color:#22863a">'node_modules/@fortawesome/fontawesome-svg-core/styles'</span></span>
<span class="line"></span></code></pre></div></code></pre><p>You can apply this solution if your project is using Javascript framework such as React, Vue, etc…</p><p>I hope this solution can help you! Thanks for reading!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Force SSH client to use given private key]]></title>
            <link>https://ansidev.xyz/posts/2021-04-23-force-ssh-client-to-use-given-private-key-identity-file</link>
            <guid>https://ansidev.xyz/posts/2021-04-23-force-ssh-client-to-use-given-private-key-identity-file</guid>
            <pubDate>Fri, 23 Apr 2021 07:53:50 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>You want force SSH client to use given private key to login to server.</p><h2 id="solution" tabindex="-1">Solution</h2><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ssh </span><span style="color:#9db1c5">-i</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/path/to/private_key</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user@server</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">ssh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-i</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/path/to/private_key</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user@server</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Or with custom SSH port: add parameter <code class="">-p port_number</code>.</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ssh </span><span style="color:#9db1c5">-i</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/path/to/private_key</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-p</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">port_number</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user@server</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">ssh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-i</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/path/to/private_key</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-p</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">port_number</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user@server</span></span>
<span class="line"></span></code></pre></div></code></pre><p>If you added some SSH keys into ssh-agent, you need to add parameter <code class="">-o "IdentitiesOnly=yes"</code> to prevent ssh-agent from overriding the private key specified.</p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">ssh </span><span style="color:#9db1c5">-o</span><span style="color:#b392f0"> </span><span style="color:#ffab70">"IdentitiesOnly=yes"</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-i</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/path/to/private_key</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-p</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">port_number</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">user@server</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">ssh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-o</span><span style="color:#24292EFF"> </span><span style="color:#22863a">"IdentitiesOnly=yes"</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-i</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/path/to/private_key</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-p</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">port_number</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">user@server</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="ssh-config-file" tabindex="-1">SSH Config File</h2><pre><code class=""><div class="shiki-container language-"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">Host server_name</span></span>
<span class="line"><span style="color:#b392f0">  HostName server_ip_address</span></span>
<span class="line"><span style="color:#b392f0">  User user</span></span>
<span class="line"><span style="color:#b392f0">  Port port_number</span></span>
<span class="line"><span style="color:#b392f0">  # Add config here</span></span>
<span class="line"><span style="color:#b392f0">  IdentitiesOnly yes</span></span>
<span class="line"><span style="color:#b392f0">  IdentityFile /path/to/private_key</span></span>
<span class="line"><span style="color:#b392f0"></span></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292eff">Host server_name</span></span>
<span class="line"><span style="color:#24292eff">  HostName server_ip_address</span></span>
<span class="line"><span style="color:#24292eff">  User user</span></span>
<span class="line"><span style="color:#24292eff">  Port port_number</span></span>
<span class="line"><span style="color:#24292eff">  # Add config here</span></span>
<span class="line"><span style="color:#24292eff">  IdentitiesOnly yes</span></span>
<span class="line"><span style="color:#24292eff">  IdentityFile /path/to/private_key</span></span>
<span class="line"><span style="color:#24292eff"></span></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[MySQL - How to list all tables that contain a specific column name?]]></title>
            <link>https://ansidev.xyz/posts/2021-03-31-mysql-list-all-tables-contain-specific-column-name</link>
            <guid>https://ansidev.xyz/posts/2021-03-31-mysql-list-all-tables-contain-specific-column-name</guid>
            <pubDate>Tue, 30 Mar 2021 18:22:32 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="problem" tabindex="-1">Problem</h2><p>You want to look for tables using the name of columns in them.</p><h2 id="solution" tabindex="-1">Solution</h2><pre><code class="language-sql"><div class="shiki-container language-sql"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">SELECT DISTINCT</span></span>
<span class="line"><span style="color:#b392f0">  table_name</span></span>
<span class="line"><span style="color:#f97583">FROM</span></span>
<span class="line"><span style="color:#b392f0">  information_schema.columns</span></span>
<span class="line"><span style="color:#f97583">WHERE</span></span>
<span class="line"><span style="color:#b392f0">  table_schema </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'schema_name'</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f97583">AND</span><span style="color:#b392f0"> column_name </span><span style="color:#f97583">IN</span><span style="color:#b392f0">(</span><span style="color:#ffab70">'column_name_01'</span><span style="color:#b392f0">, </span><span style="color:#ffab70">'column_name_02'</span><span style="color:#b392f0">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">SELECT DISTINCT</span></span>
<span class="line"><span style="color:#24292EFF">  table_name</span></span>
<span class="line"><span style="color:#d32f2f">FROM</span></span>
<span class="line"><span style="color:#24292EFF">  information_schema.columns</span></span>
<span class="line"><span style="color:#d32f2f">WHERE</span></span>
<span class="line"><span style="color:#24292EFF">  table_schema </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'schema_name'</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">AND</span><span style="color:#24292EFF"> column_name </span><span style="color:#d32f2f">IN</span><span style="color:#24292EFF">(</span><span style="color:#22863a">'column_name_01'</span><span style="color:#24292EFF">, </span><span style="color:#22863a">'column_name_02'</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Or a more simple way:</p><pre><code class="language-sql"><div class="shiki-container language-sql"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">SELECT</span></span>
<span class="line"><span style="color:#b392f0">  </span><span style="color:#f97583">*</span></span>
<span class="line"><span style="color:#f97583">FROM</span></span>
<span class="line"><span style="color:#b392f0">  information_schema.columns</span></span>
<span class="line"><span style="color:#f97583">WHERE</span></span>
<span class="line"><span style="color:#b392f0">  column_name </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'column_name'</span><span style="color:#b392f0">;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">SELECT</span></span>
<span class="line"><span style="color:#24292EFF">  </span><span style="color:#d32f2f">*</span></span>
<span class="line"><span style="color:#d32f2f">FROM</span></span>
<span class="line"><span style="color:#24292EFF">  information_schema.columns</span></span>
<span class="line"><span style="color:#d32f2f">WHERE</span></span>
<span class="line"><span style="color:#24292EFF">  column_name </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'column_name'</span><span style="color:#24292EFF">;</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cách khắc phục lỗi Failed to execute 'appendChild' on 'Node']]></title>
            <link>https://ansidev.xyz/posts/2021-03-05-cach-khac-phuc-loi-failed-to-append-child-on-node</link>
            <guid>https://ansidev.xyz/posts/2021-03-05-cach-khac-phuc-loi-failed-to-append-child-on-node</guid>
            <pubDate>Fri, 05 Mar 2021 09:10:03 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="v%E1%BA%A5n-%C4%91%E1%BB%81" tabindex="-1">Vấn đề</h2><p>Trong một số trường hợp khi build ứng dụng Nuxt ở mode: <code class="">universal</code> hoặc target: <code class="">server</code> đối với các phiên bản mới hơn của Nuxt, bạn sẽ gặp lỗi:</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">Failed to execute </span><span style="color:#ffab70">'appendChild'</span><span style="color:#b392f0"> on </span><span style="color:#ffab70">'Node'</span><span style="color:#b392f0">: This node </span><span style="color:#f97583">type</span><span style="color:#b392f0"> does not support this method.</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">Failed to execute </span><span style="color:#22863a">'appendChild'</span><span style="color:#24292EFF"> on </span><span style="color:#22863a">'Node'</span><span style="color:#24292EFF">: This node </span><span style="color:#d32f2f">type</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">does</span><span style="color:#24292EFF"> not support this method.</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="nguy%C3%AAn-nh%C3%A2n" tabindex="-1">Nguyên nhân</h2><ul><li>Lỗi này là do cấu trúc DOM không đồng nhất khi render trong quá trình build và runtime.</li><li>Nguyên nhân thường gặp là do bạn đang sử dụng một vài component không hỗ trợ SSR.</li></ul><h2 id="c%C3%A1ch-gi%E1%BA%A3i-quy%E1%BA%BFt" tabindex="-1">Cách giải quyết</h2><ul><li>Detect component bị lỗi, cho vào trong thẻ <code class="">&lt;client-only&gt;</code> để Nuxt chỉ render khi runtime.</li><li><strong>Lưu ý:</strong> Trong một số trường hợp giải pháp trên sẽ không phải giải pháp thích hợp nhất, bạn cần dựa vào tình huống thực tế để đưa ra cách giải quyết thích hợp nhất.</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Kiểm tra xem prop có được truyền giá trị hay không trong Vue]]></title>
            <link>https://ansidev.xyz/posts/2021-03-04-kiem-tra-xem-prop-co-duoc-truyen-gia-tri-hay-khong-trong-vue</link>
            <guid>https://ansidev.xyz/posts/2021-03-04-kiem-tra-xem-prop-co-duoc-truyen-gia-tri-hay-khong-trong-vue</guid>
            <pubDate>Thu, 04 Mar 2021 09:10:03 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="v%E1%BA%A5n-%C4%91%E1%BB%81" tabindex="-1">Vấn đề</h2><p>Chúng ta có component Foo.vue</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">export</span><span style="color:#b392f0"> </span><span style="color:#f97583">default</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">  name</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'Foo'</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">  props</span><span style="color:#f97583">:</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">    bar</span><span style="color:#f97583">:</span><span style="color:#b392f0"> {</span></span>
<span class="line"><span style="color:#b392f0">      type</span><span style="color:#f97583">:</span><span style="color:#b392f0"> String</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      required</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">false</span><span style="color:#bbb">,</span></span>
<span class="line"><span style="color:#b392f0">      default</span><span style="color:#f97583">:</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'bar'</span></span>
<span class="line"><span style="color:#b392f0">    }</span></span>
<span class="line"><span style="color:#b392f0">  }</span></span>
<span class="line"><span style="color:#b392f0">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">export</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">default</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">  name</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'Foo'</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">  props</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">    bar</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> {</span></span>
<span class="line"><span style="color:#24292EFF">      type</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> String</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      required</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">false</span><span style="color:#212121">,</span></span>
<span class="line"><span style="color:#24292EFF">      default</span><span style="color:#d32f2f">:</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'bar'</span></span>
<span class="line"><span style="color:#24292EFF">    }</span></span>
<span class="line"><span style="color:#24292EFF">  }</span></span>
<span class="line"><span style="color:#24292EFF">}</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Và bạn sử dụng component này tại một nơi nào đó trong ứng dụng của bạn. Cả hai cách sau đều sẽ cho giá trị của prop <code class="">bar</code> là <code class="">bar</code>.</p><pre><code class="language-vue"><div class="shiki-container language-vue"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">&lt;</span><span style="color:#ffab70">Foo</span><span style="color:#b392f0"> /&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">&lt;</span><span style="color:#22863a">Foo</span><span style="color:#24292EFF"> /&gt;</span></span>
<span class="line"></span></code></pre></div></code></pre><pre><code class="language-vue"><div class="shiki-container language-vue"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">&lt;</span><span style="color:#ffab70">Foo</span><span style="color:#b392f0"> bar</span><span style="color:#f97583">=</span><span style="color:#ffab70">"bar"</span><span style="color:#b392f0"> /&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">&lt;</span><span style="color:#22863a">Foo</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">bar</span><span style="color:#d32f2f">=</span><span style="color:#22863a">"bar"</span><span style="color:#24292EFF"> /&gt;</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Vậy làm sao xác định khi nào prop <code class="">bar</code> được truyền giá trị từ ngoài, khi nào thì đang sử dụng giá trị mặc định?</p><h2 id="c%C3%A1ch-gi%E1%BA%A3i-quy%E1%BA%BFt" tabindex="-1">Cách giải quyết</h2><p>Các giá trị được truyền từ bên ngoài vào được lưu trong biến <code class="">this.$options.propsData</code>.</p><p>Để kiểm tra một prop có được truyền giá trị từ ngoài vào hay không thì bạn có thể làm như sau:</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#79b8ff">Object</span><span style="color:#b392f0">.keys(</span><span style="color:#79b8ff">this</span><span style="color:#b392f0">.</span><span style="color:#79b8ff">$options</span><span style="color:#b392f0">.propsData).some((prop) </span><span style="color:#f97583">=&gt;</span><span style="color:#b392f0"> prop </span><span style="color:#f97583">===</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'bar'</span><span style="color:#b392f0">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#1976d2">Object</span><span style="color:#6f42c1">.keys</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">this</span><span style="color:#24292EFF">.</span><span style="color:#1976d2">$options</span><span style="color:#24292EFF">.propsData)</span><span style="color:#6f42c1">.some</span><span style="color:#24292EFF">((prop) </span><span style="color:#d32f2f">=&gt;</span><span style="color:#24292EFF"> prop </span><span style="color:#d32f2f">===</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'bar'</span><span style="color:#24292EFF">)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Ở đây, <code class="">bar</code> chính là tên của prop cần kiểm tra.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Lỗi không tìm thấy file manifest/client.json khi build project VuePress]]></title>
            <link>https://ansidev.xyz/posts/2021-02-27-vuepress-build-cannot-find-dist-manifest-client-json</link>
            <guid>https://ansidev.xyz/posts/2021-02-27-vuepress-build-cannot-find-dist-manifest-client-json</guid>
            <pubDate>Sat, 27 Feb 2021 06:14:13 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="v%E1%BA%A5n-%C4%91%E1%BB%81" tabindex="-1">Vấn đề</h2><p>Khi chạy lệnh <code class="">vuepress build</code> thì quá trình build bị lỗi sau:</p><pre><code class="language-js"><div class="shiki-container language-js"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">Error</span><span style="color:#bbb">:</span><span style="color:#b392f0"> Cannot find </span><span style="color:#f97583">module</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'dist/manifest/client.json'</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">Error</span><span style="color:#212121">:</span><span style="color:#24292EFF"> Cannot find </span><span style="color:#d32f2f">module</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'dist/manifest/client.json'</span></span>
<span class="line"></span></code></pre></div></code></pre><h2 id="gi%E1%BA%A3i-ph%C3%A1p" tabindex="-1">Giải pháp</h2><p>Set biến môi trường <code class="">NODE_ENV</code>=<code class="">production</code></p><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">NODE_ENV</span><span style="color:#f97583">=</span><span style="color:#9db1c5">production</span><span style="color:#b392f0"> npm </span><span style="color:#9db1c5">run</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">build</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">NODE_ENV</span><span style="color:#d32f2f">=</span><span style="color:#2b5581">production</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">npm</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">run</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">build</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Xác định biến được khai báo ở đâu (*nix system)]]></title>
            <link>https://ansidev.xyz/posts/2021-02-09-xac-dinh-bien-duoc-khai-bao-o-dau-unix-system</link>
            <guid>https://ansidev.xyz/posts/2021-02-09-xac-dinh-bien-duoc-khai-bao-o-dau-unix-system</guid>
            <pubDate>Tue, 09 Feb 2021 12:08:12 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="v%E1%BA%A5n-%C4%91%E1%BB%81" tabindex="-1">Vấn đề</h2><p>Mình có sử dụng một số plugin trong shell hiện tại, các plugin sẽ khai báo một số custom command, environment variable, … nên đôi khi sẽ override các setting riêng của mình. Mình cần xác định một custom command, environment variable, … được khai báo bởi plugin nào để disable.</p><h2 id="gi%E1%BA%A3i-ph%C3%A1p" tabindex="-1">Giải pháp</h2><p>Tùy thuộc vào shell bạn đang sử dụng mà sẽ có cách khác nhau. Trong phạm vi bài viết, mình chỉ hướng dẫn cho hai shell phổ biến nhất là <code class="">bash</code> và <code class="">zsh</code>.</p><p><strong>bash</strong></p><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">PS4</span><span style="color:#f97583">=</span><span style="color:#ffab70">'+$BASH_SOURCE&gt; '</span><span style="color:#b392f0"> BASH_XTRACEFD</span><span style="color:#f97583">=</span><span style="color:#f8f8f8">7</span><span style="color:#b392f0"> bash </span><span style="color:#9db1c5">-xl</span><span style="color:#b392f0"> </span><span style="color:#f97583">7&gt;&amp;2</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#24292EFF">PS4</span><span style="color:#d32f2f">=</span><span style="color:#22863a">'+$BASH_SOURCE&gt; '</span><span style="color:#24292EFF"> BASH_XTRACEFD</span><span style="color:#d32f2f">=</span><span style="color:#1976d2">7</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">bash</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-xl</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">7&gt;&amp;2</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>zsh</strong></p><pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">zsh </span><span style="color:#9db1c5">-xl</span><span style="color:#b392f0"> </span><span style="color:#f97583">2&gt;&amp;1</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">zsh</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-xl</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">2&gt;&amp;1</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Thay đổi theme trong Alacritty]]></title>
            <link>https://ansidev.xyz/posts/2021-02-06-thay-doi-theme-trong-alacritty</link>
            <guid>https://ansidev.xyz/posts/2021-02-06-thay-doi-theme-trong-alacritty</guid>
            <pubDate>Fri, 05 Feb 2021 20:22:43 GMT</pubDate>
            <description><![CDATA[
Bài viết dành cho ai đang dùng phần mềm Alacritty và muốn thay đổi theme.

<!-- more -->

## Tại sao mình dùng Alacritty?

- Mình dùng macOS.
- Mình không thích Terminal mặc định của macOS.
- Mình đã từng thử qua iTerm, Hyper, Terminus nhưng thấy không thích :) .
- Sau xem qua review và trải nghiệm Alacritty thì xài luôn tới giờ :) .

## Cách chuyển đổi theme trong Alacritty

Tất nhiên mặc định thì Alacritty đã hỗ trợ sẵn theme rồi, bạn có thể đọc documentation và custom theo ý bạn.

Tuy nhiên, nếu lựa chọn của bạn là những theme có sẵn, hoặc giống như mình (chuyển từ một terminal khác sang) thì bài viết này có thể hữu ích dành cho bạn.

Sau khi search trên Google thì mình tổng hợp được một số tool hỗ trợ chuyển đổi theme cho Alacritty:

| No. | URL                                                  | Ngôn ngữ lập trình | Nhận xét                            |
| ]]></description>
            <content:encoded><![CDATA[<h2 id="t%E1%BA%A1i-sao-m%C3%ACnh-d%C3%B9ng-alacritty%3F" tabindex="-1">Tại sao mình dùng Alacritty?</h2><ul><li>Mình dùng macOS.</li><li>Mình không thích Terminal mặc định của macOS.</li><li>Mình đã từng thử qua iTerm, Hyper, Terminus nhưng thấy không thích :) .</li><li>Sau xem qua review và trải nghiệm Alacritty thì xài luôn tới giờ :) .</li></ul><h2 id="c%C3%A1ch-chuy%E1%BB%83n-%C4%91%E1%BB%95i-theme-trong-alacritty" tabindex="-1">Cách chuyển đổi theme trong Alacritty</h2><p>Tất nhiên mặc định thì Alacritty đã hỗ trợ sẵn theme rồi, bạn có thể đọc documentation và custom theo ý bạn.</p><p>Tuy nhiên, nếu lựa chọn của bạn là những theme có sẵn, hoặc giống như mình (chuyển từ một terminal khác sang) thì bài viết này có thể hữu ích dành cho bạn.</p><p>Sau khi search trên Google thì mình tổng hợp được một số tool hỗ trợ chuyển đổi theme cho Alacritty:</p><table><thead><tr><th>No.</th><th>URL</th><th>Ngôn ngữ lập trình</th><th>Nhận xét</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/toggle-corp/alacritty-colorscheme" class="external-link" target="_blank" rel="noreferrer noopener">https://github.com/toggle-corp/alacritty-colorscheme</a></td><td>Python</td><td>Không hỗ trợ interactive mode</td></tr><tr><td>2</td><td><a href="https://github.com/tichopad/alacritty-theme-switch" class="external-link" target="_blank" rel="noreferrer noopener">https://github.com/tichopad/alacritty-theme-switch</a></td><td>Javascript</td><td>Phải tự tải theme, config thủ công</td></tr><tr><td>3</td><td><a href="https://github.com/rajasegar/alacritty-themes" class="external-link" target="_blank" rel="noreferrer noopener">https://github.com/rajasegar/alacritty-themes</a></td><td>Javascript</td><td>Có hỗ trợ interactive mode, preview</td></tr></tbody></table><p><strong>=&gt; Mình chọn alacritty-themes [3].</strong></p><p>Dưới đây là hình demo:</p><img class="medium-zoom" src="/uploads/2021/02/06/alacritty-themes.webp" alt="alacritty-themes"><p>Hết bài rồi!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Khắc phục lỗi "is damaged and can't be opened" trên macOS]]></title>
            <link>https://ansidev.xyz/posts/2021-01-28-khac-phuc-loi-is-damaged-and-can-t-be-opened-tren-mac-os</link>
            <guid>https://ansidev.xyz/posts/2021-01-28-khac-phuc-loi-is-damaged-and-can-t-be-opened-tren-mac-os</guid>
            <pubDate>Thu, 28 Jan 2021 11:11:54 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="nguy%C3%AAn-nh%C3%A2n" tabindex="-1">Nguyên nhân</h2><p>Do cơ chế xác thực ứng dụng của Apple, chỉ những ứng dụng được Apple xác thực mới có thể chạy bình thường.</p><h2 id="gi%E1%BA%A3i-ph%C3%A1p" tabindex="-1">Giải pháp</h2><h3 id="t%E1%BA%AFt-gatekeeper" tabindex="-1">Tắt GateKeeper</h3><ul><li>Mở ứng dụng <strong>Terminal</strong>.</li><li>Chạy lệnh:</li></ul><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">spctl</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--master-disable</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">spctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--master-disable</span></span>
<span class="line"></span></code></pre></div></code></pre><ul><li>Nhập mật khẩu và nhấn <code class="">Enter</code>.</li><li>Mở ứng dụng <strong>System Preferences</strong> và truy cập <strong>Security &amp; Privacy</strong>, kiểm tra xem có hiện mục <strong>Anywhere</strong> không, nếu hiện là OK.</li></ul><img class="medium-zoom" src="/uploads/2021/01/28/System_Preferences.webp" alt="System Preferences"><ul><li>Tắt và chạy lại ứng dụng.</li></ul><p>Note:</p><ul><li>Nếu bạn muốn bật GateKeeper thì mở Terminal và chạy lệnh sau:</li></ul><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">spctl</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">--master-enable</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">spctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--master-enable</span></span>
<span class="line"></span></code></pre></div></code></pre><ul><li>Kiểm tra GateKeeper đang bật hay đang tắt bằng lệnh:</li></ul><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">spctl </span><span style="color:#9db1c5">--status</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">spctl</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">--status</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Kết quả trả về:</p><p><code class="">assessments enabled</code>: GateKeeper đang bật.</p><p><code class="">assessments disabled</code>: GateKeeper đang tắt.</p><h3 id="th%C3%AAm-ngo%E1%BA%A1i-l%E1%BB%87-%C4%91%E1%BB%83-cho-ph%C3%A9p-%E1%BB%A9ng-d%E1%BB%A5ng-ch%E1%BA%A1y" tabindex="-1">Thêm ngoại lệ để cho phép ứng dụng chạy</h3><p>Trong một số trường hợp, dù đã tắt GateKeeper nhưng vẫn chưa khắc phục được thì bạn có thể thử cách này.</p><ul><li>Mở ứng dụng <strong>Terminal</strong>.</li><li>Chạy lệnh:</li></ul><pre><code class="language-bash"><div class="shiki-container language-bash"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">sudo </span><span style="color:#9db1c5">xattr</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">-rd</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">com.apple.quarantine</span><span style="color:#b392f0"> </span><span style="color:#9db1c5">/Applications/AppName.app</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">sudo</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">xattr</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">-rd</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">com.apple.quarantine</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">/Applications/AppName.app</span></span>
<span class="line"></span></code></pre></div></code></pre><p>Note: Thay <code class="">/Applications/AppName.app</code> bằng đường dẫn đến app bạn cần thêm ngoại lệ.</p><ul><li>Nhập mật khẩu và nhấn <code class="">Enter</code>.</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to change character set and collation setting MariaDB/MySQL Docker?]]></title>
            <link>https://ansidev.xyz/posts/2019-09-28-how-to-change-character-set-and-collation-setting-mariadb-mysql-docker</link>
            <guid>https://ansidev.xyz/posts/2019-09-28-how-to-change-character-set-and-collation-setting-mariadb-mysql-docker</guid>
            <pubDate>Sat, 28 Sep 2019 16:39:24 GMT</pubDate>
            <content:encoded><![CDATA[<pre><code class="language-shell"><div class="shiki-container language-shell"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#b392f0">FROM </span><span style="color:#9db1c5">mariadb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#b392f0">RUN </span><span style="color:#9db1c5">{</span><span style="color:#b392f0"> \</span></span>
<span class="line"><span style="color:#b392f0">    </span><span style="color:#9db1c5">echo</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'[mysqld]'</span><span style="color:#b392f0">; \</span></span>
<span class="line"><span style="color:#b392f0">    echo </span><span style="color:#ffab70">'character-set-server=utf8mb4'</span><span style="color:#b392f0">; \</span></span>
<span class="line"><span style="color:#b392f0">    echo </span><span style="color:#ffab70">'collation-server=utf8mb4_unicode_ci'</span><span style="color:#b392f0">; \</span></span>
<span class="line"><span style="color:#b392f0">} &gt; /etc/mysql/conf.d/charset.cnf</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#6f42c1">FROM</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">mariadb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6f42c1">RUN</span><span style="color:#24292EFF"> </span><span style="color:#2b5581">{</span><span style="color:#24292EFF"> \</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#2b5581">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'[mysqld]'</span><span style="color:#24292EFF">; \</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'character-set-server=utf8mb4'</span><span style="color:#24292EFF">; \</span></span>
<span class="line"><span style="color:#24292EFF">    </span><span style="color:#6f42c1">echo</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'collation-server=utf8mb4_unicode_ci'</span><span style="color:#24292EFF">; \</span></span>
<span class="line"><span style="color:#24292EFF">} &gt; /etc/mysql/conf.d/charset.cnf</span></span>
<span class="line"></span></code></pre></div></code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Long time no see, Java!]]></title>
            <link>https://ansidev.xyz/posts/2019-09-12-long-time-no-see-java</link>
            <guid>https://ansidev.xyz/posts/2019-09-12-long-time-no-see-java</guid>
            <pubDate>Thu, 12 Sep 2019 09:55:23 GMT</pubDate>
            <content:encoded><![CDATA[<p>It has been 2 years since I came back to Java programming and there are many changes!</p><p>After 2 weeks, there are many notes I want to share with you:</p><ul><li><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" class="external-link" target="_blank" rel="noreferrer noopener">Oracle JDK</a> is not free of charge anymore for production.</p><p>You can consider some of alternative solutions:</p><ul><li><a href="https://jdk.java.net/" class="external-link" target="_blank" rel="noreferrer noopener">Oracle OpenJDK</a>.</li><li><a href="https://adoptopenjdk.net/" class="external-link" target="_blank" rel="noreferrer noopener">AdoptOpen JDK</a>.</li><li><a href="https://www.azul.com/downloads/zulu-community/" class="external-link" target="_blank" rel="noreferrer noopener">Azul Zulu</a>.</li></ul></li><li><p>Solution for <a href="https://www.baeldung.com/circular-dependencies-in-spring" class="external-link" target="_blank" rel="noreferrer noopener">Circular Dependencies Problem</a></p></li><li><p>Problem <code class="">Encoded password does not look like BCrypt</code>.</p><ul><li>Why? <a href="https://stackoverflow.com/questions/49582971/encoded-password-does-not-look-like-bcrypt" class="external-link" target="_blank" rel="noreferrer noopener">StackOverflow topic</a>.</li><li>My solution:</li></ul><pre><code class="language-java"><div class="shiki-container language-java"><pre class="shiki min-dark" style="background-color:#1f1f1f" tabindex="0"><code class=""><span class="line"><span style="color:#f97583">String</span><span style="color:#b392f0"> hashedPassword </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">user</span><span style="color:#bbb">.</span><span style="color:#b392f0">getPassword();</span></span>
<span class="line"><span style="color:#f97583">StringBuilder</span><span style="color:#b392f0"> sb </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#f97583">new</span><span style="color:#b392f0"> StringBuilder(hashedPassword);</span></span>
<span class="line"><span style="color:#79b8ff">sb</span><span style="color:#bbb">.</span><span style="color:#b392f0">setCharAt(</span><span style="color:#f8f8f8">2</span><span style="color:#bbb">,</span><span style="color:#b392f0"> </span><span style="color:#ffab70">'a'</span><span style="color:#b392f0">);</span></span>
<span class="line"><span style="color:#f97583">final</span><span style="color:#b392f0"> </span><span style="color:#f97583">String</span><span style="color:#b392f0"> patchedHashedPassword </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">sb</span><span style="color:#bbb">.</span><span style="color:#b392f0">toString();</span></span>
<span class="line"><span style="color:#f97583">Boolean</span><span style="color:#b392f0"> isMatchedPassword </span><span style="color:#f97583">=</span><span style="color:#b392f0"> </span><span style="color:#79b8ff">passwordEncoder</span><span style="color:#bbb">.</span><span style="color:#b392f0">matches(password</span><span style="color:#bbb">,</span><span style="color:#b392f0"> patchedHashedPassword);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-light" style="background-color:#fff" tabindex="0"><code class=""><span class="line"><span style="color:#d32f2f">String</span><span style="color:#24292EFF"> hashedPassword </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">user</span><span style="color:#212121">.</span><span style="color:#6f42c1">getPassword</span><span style="color:#24292EFF">();</span></span>
<span class="line"><span style="color:#d32f2f">StringBuilder</span><span style="color:#24292EFF"> sb </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">new</span><span style="color:#24292EFF"> </span><span style="color:#6f42c1">StringBuilder(hashedPassword)</span><span style="color:#24292EFF">;</span></span>
<span class="line"><span style="color:#1976d2">sb</span><span style="color:#212121">.</span><span style="color:#6f42c1">setCharAt</span><span style="color:#24292EFF">(</span><span style="color:#1976d2">2</span><span style="color:#212121">,</span><span style="color:#24292EFF"> </span><span style="color:#22863a">'a'</span><span style="color:#24292EFF">);</span></span>
<span class="line"><span style="color:#d32f2f">final</span><span style="color:#24292EFF"> </span><span style="color:#d32f2f">String</span><span style="color:#24292EFF"> patchedHashedPassword </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">sb</span><span style="color:#212121">.</span><span style="color:#6f42c1">toString</span><span style="color:#24292EFF">();</span></span>
<span class="line"><span style="color:#d32f2f">Boolean</span><span style="color:#24292EFF"> isMatchedPassword </span><span style="color:#d32f2f">=</span><span style="color:#24292EFF"> </span><span style="color:#1976d2">passwordEncoder</span><span style="color:#212121">.</span><span style="color:#6f42c1">matches</span><span style="color:#24292EFF">(password</span><span style="color:#212121">,</span><span style="color:#24292EFF"> patchedHashedPassword);</span></span>
<span class="line"></span></code></pre></div></code></pre></li><li><p>Problem while parsing OAuth2 JSON nested response.</p><ul><li>Why? <a href="https://github.com/spring-projects/spring-security/issues/6463" class="external-link" target="_blank" rel="noreferrer noopener">GitHub Issue</a>.</li><li>My Solution (based on solution from an answer): <a href="https://gist.github.com/ansidev/8f4291d9a177ca2dd5d6fce8660c1f43/" class="external-link" target="_blank" rel="noreferrer noopener">OAuth2 Access Token Nested Json Response Http Message Converter</a>.</li></ul></li></ul><p>(To be continued…)</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Chuyện thanh toán bằng AirPay]]></title>
            <link>https://ansidev.xyz/posts/2019-06-22-chuyen-thanh-toan-bang-airpay</link>
            <guid>https://ansidev.xyz/posts/2019-06-22-chuyen-thanh-toan-bang-airpay</guid>
            <pubDate>Sat, 22 Jun 2019 07:28:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="ng%E1%BB%8Dn-ngu%E1%BB%93n-c%C3%A2u-chuy%E1%BB%87n" tabindex="-1">Ngọn nguồn câu chuyện</h2><p>Chuyện là mình có 2 số điện thoại:</p><ul><li>Số thứ nhất (số A): Liên kết với tài khoản ngân hàng, chuyên dùng để nhận OTP SMS.</li><li>Số thứ hai (số B): Liên kết với mấy trang thương mại điện tử, chủ yếu để mấy anh shipper gọi thì không bị miss.</li></ul><p>Mọi thứ hoạt động trơn tru cho đến một ngày, mình cần thanh toán bằng Airpay trên Shopee.</p><h2 id="t%E1%BA%A1o-t%C3%A0i-kho%E1%BA%A3n-airpay" tabindex="-1">Tạo tài khoản Airpay</h2><p>Tất nhiên để nạp tiền vào Airpay thì cần liên kết với tài khoản ngân hàng. Mà muốn liên kết với tài khoản ngân hàng thì ngân hàng nó yêu cầu phải dùng đúng số điện thoại mình đăng ký với nó. Suy ra phải dùng số B để tạo tài khoản Airpay. Bước 1 đã giải quyết xong. Nạp tiền vô để đó.</p><h2 id="thanh-to%C3%A1n-tr%C3%AAn-airpay-tr%C3%AAn-shopee" tabindex="-1">Thanh toán trên Airpay trên Shopee</h2><p>Vì số điện thoại mình dùng để liên kết với Shopee lại là số B, nên vẫn là vấn đề như trên: số điện thoại không giống nhau Shopee nó không cho liên kết tài khoản Airpay và Shopee để thanh toán.</p><p>Thế là phải ngồi đổi số điện thoại bên Shopee sang số B + thêm một cái địa chỉ giao hàng với số điện thoại là số A.</p><p>Kể ra thanh toán Airpay cũng không đơn giản lắm. Gặp mấy người lớn tuổi chắc chịu.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Hello world again]]></title>
            <link>https://ansidev.xyz/posts/2019-05-20-hello-world-again</link>
            <guid>https://ansidev.xyz/posts/2019-05-20-hello-world-again</guid>
            <pubDate>Mon, 20 May 2019 13:39:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>Now, the old site was accidentally deleted.</p><p>So you are seeing a new ansidev.xyz.</p><p>End.</p>]]></content:encoded>
        </item>
    </channel>
</rss>
